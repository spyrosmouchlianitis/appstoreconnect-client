/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the GameCenterMatchmakingRuleSetRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterMatchmakingRuleSetRelationships{}

// GameCenterMatchmakingRuleSetRelationships struct for GameCenterMatchmakingRuleSetRelationships
type GameCenterMatchmakingRuleSetRelationships struct {
	Teams *GameCenterMatchmakingRuleSetRelationshipsTeams `json:"teams,omitempty"`
	Rules *GameCenterMatchmakingRuleSetRelationshipsRules `json:"rules,omitempty"`
	MatchmakingQueues *GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues `json:"matchmakingQueues,omitempty"`
}

// NewGameCenterMatchmakingRuleSetRelationships instantiates a new GameCenterMatchmakingRuleSetRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterMatchmakingRuleSetRelationships() *GameCenterMatchmakingRuleSetRelationships {
	this := GameCenterMatchmakingRuleSetRelationships{}
	return &this
}

// NewGameCenterMatchmakingRuleSetRelationshipsWithDefaults instantiates a new GameCenterMatchmakingRuleSetRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterMatchmakingRuleSetRelationshipsWithDefaults() *GameCenterMatchmakingRuleSetRelationships {
	this := GameCenterMatchmakingRuleSetRelationships{}
	return &this
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *GameCenterMatchmakingRuleSetRelationships) GetTeams() GameCenterMatchmakingRuleSetRelationshipsTeams {
	if o == nil || IsNil(o.Teams) {
		var ret GameCenterMatchmakingRuleSetRelationshipsTeams
		return ret
	}
	return *o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) GetTeamsOk() (*GameCenterMatchmakingRuleSetRelationshipsTeams, bool) {
	if o == nil || IsNil(o.Teams) {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) HasTeams() bool {
	if o != nil && !IsNil(o.Teams) {
		return true
	}

	return false
}

// SetTeams gets a reference to the given GameCenterMatchmakingRuleSetRelationshipsTeams and assigns it to the Teams field.
func (o *GameCenterMatchmakingRuleSetRelationships) SetTeams(v GameCenterMatchmakingRuleSetRelationshipsTeams) {
	o.Teams = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *GameCenterMatchmakingRuleSetRelationships) GetRules() GameCenterMatchmakingRuleSetRelationshipsRules {
	if o == nil || IsNil(o.Rules) {
		var ret GameCenterMatchmakingRuleSetRelationshipsRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) GetRulesOk() (*GameCenterMatchmakingRuleSetRelationshipsRules, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given GameCenterMatchmakingRuleSetRelationshipsRules and assigns it to the Rules field.
func (o *GameCenterMatchmakingRuleSetRelationships) SetRules(v GameCenterMatchmakingRuleSetRelationshipsRules) {
	o.Rules = &v
}

// GetMatchmakingQueues returns the MatchmakingQueues field value if set, zero value otherwise.
func (o *GameCenterMatchmakingRuleSetRelationships) GetMatchmakingQueues() GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues {
	if o == nil || IsNil(o.MatchmakingQueues) {
		var ret GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues
		return ret
	}
	return *o.MatchmakingQueues
}

// GetMatchmakingQueuesOk returns a tuple with the MatchmakingQueues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) GetMatchmakingQueuesOk() (*GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues, bool) {
	if o == nil || IsNil(o.MatchmakingQueues) {
		return nil, false
	}
	return o.MatchmakingQueues, true
}

// HasMatchmakingQueues returns a boolean if a field has been set.
func (o *GameCenterMatchmakingRuleSetRelationships) HasMatchmakingQueues() bool {
	if o != nil && !IsNil(o.MatchmakingQueues) {
		return true
	}

	return false
}

// SetMatchmakingQueues gets a reference to the given GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues and assigns it to the MatchmakingQueues field.
func (o *GameCenterMatchmakingRuleSetRelationships) SetMatchmakingQueues(v GameCenterMatchmakingRuleSetRelationshipsMatchmakingQueues) {
	o.MatchmakingQueues = &v
}

func (o GameCenterMatchmakingRuleSetRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterMatchmakingRuleSetRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Teams) {
		toSerialize["teams"] = o.Teams
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.MatchmakingQueues) {
		toSerialize["matchmakingQueues"] = o.MatchmakingQueues
	}
	return toSerialize, nil
}

type NullableGameCenterMatchmakingRuleSetRelationships struct {
	value *GameCenterMatchmakingRuleSetRelationships
	isSet bool
}

func (v NullableGameCenterMatchmakingRuleSetRelationships) Get() *GameCenterMatchmakingRuleSetRelationships {
	return v.value
}

func (v *NullableGameCenterMatchmakingRuleSetRelationships) Set(val *GameCenterMatchmakingRuleSetRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterMatchmakingRuleSetRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterMatchmakingRuleSetRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterMatchmakingRuleSetRelationships(val *GameCenterMatchmakingRuleSetRelationships) *NullableGameCenterMatchmakingRuleSetRelationships {
	return &NullableGameCenterMatchmakingRuleSetRelationships{value: val, isSet: true}
}

func (v NullableGameCenterMatchmakingRuleSetRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterMatchmakingRuleSetRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


