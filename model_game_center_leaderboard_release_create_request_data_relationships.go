/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GameCenterLeaderboardReleaseCreateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardReleaseCreateRequestDataRelationships{}

// GameCenterLeaderboardReleaseCreateRequestDataRelationships struct for GameCenterLeaderboardReleaseCreateRequestDataRelationships
type GameCenterLeaderboardReleaseCreateRequestDataRelationships struct {
	GameCenterDetail GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail `json:"gameCenterDetail"`
	GameCenterLeaderboard GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard `json:"gameCenterLeaderboard"`
}

type _GameCenterLeaderboardReleaseCreateRequestDataRelationships GameCenterLeaderboardReleaseCreateRequestDataRelationships

// NewGameCenterLeaderboardReleaseCreateRequestDataRelationships instantiates a new GameCenterLeaderboardReleaseCreateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardReleaseCreateRequestDataRelationships(gameCenterDetail GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail, gameCenterLeaderboard GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard) *GameCenterLeaderboardReleaseCreateRequestDataRelationships {
	this := GameCenterLeaderboardReleaseCreateRequestDataRelationships{}
	this.GameCenterDetail = gameCenterDetail
	this.GameCenterLeaderboard = gameCenterLeaderboard
	return &this
}

// NewGameCenterLeaderboardReleaseCreateRequestDataRelationshipsWithDefaults instantiates a new GameCenterLeaderboardReleaseCreateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardReleaseCreateRequestDataRelationshipsWithDefaults() *GameCenterLeaderboardReleaseCreateRequestDataRelationships {
	this := GameCenterLeaderboardReleaseCreateRequestDataRelationships{}
	return &this
}

// GetGameCenterDetail returns the GameCenterDetail field value
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) GetGameCenterDetail() GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail {
	if o == nil {
		var ret GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail
		return ret
	}

	return o.GameCenterDetail
}

// GetGameCenterDetailOk returns a tuple with the GameCenterDetail field value
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) GetGameCenterDetailOk() (*GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameCenterDetail, true
}

// SetGameCenterDetail sets field value
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) SetGameCenterDetail(v GameCenterAchievementReleaseCreateRequestDataRelationshipsGameCenterDetail) {
	o.GameCenterDetail = v
}

// GetGameCenterLeaderboard returns the GameCenterLeaderboard field value
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) GetGameCenterLeaderboard() GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard {
	if o == nil {
		var ret GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard
		return ret
	}

	return o.GameCenterLeaderboard
}

// GetGameCenterLeaderboardOk returns a tuple with the GameCenterLeaderboard field value
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) GetGameCenterLeaderboardOk() (*GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GameCenterLeaderboard, true
}

// SetGameCenterLeaderboard sets field value
func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) SetGameCenterLeaderboard(v GameCenterLeaderboardLocalizationCreateRequestDataRelationshipsGameCenterLeaderboard) {
	o.GameCenterLeaderboard = v
}

func (o GameCenterLeaderboardReleaseCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardReleaseCreateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gameCenterDetail"] = o.GameCenterDetail
	toSerialize["gameCenterLeaderboard"] = o.GameCenterLeaderboard
	return toSerialize, nil
}

func (o *GameCenterLeaderboardReleaseCreateRequestDataRelationships) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"gameCenterDetail",
		"gameCenterLeaderboard",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGameCenterLeaderboardReleaseCreateRequestDataRelationships := _GameCenterLeaderboardReleaseCreateRequestDataRelationships{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGameCenterLeaderboardReleaseCreateRequestDataRelationships)

	if err != nil {
		return err
	}

	*o = GameCenterLeaderboardReleaseCreateRequestDataRelationships(varGameCenterLeaderboardReleaseCreateRequestDataRelationships)

	return err
}

type NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships struct {
	value *GameCenterLeaderboardReleaseCreateRequestDataRelationships
	isSet bool
}

func (v NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) Get() *GameCenterLeaderboardReleaseCreateRequestDataRelationships {
	return v.value
}

func (v *NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) Set(val *GameCenterLeaderboardReleaseCreateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardReleaseCreateRequestDataRelationships(val *GameCenterLeaderboardReleaseCreateRequestDataRelationships) *NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships {
	return &NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardReleaseCreateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


