/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// InAppPurchasesV2ResponseIncludedInner - struct for InAppPurchasesV2ResponseIncludedInner
type InAppPurchasesV2ResponseIncludedInner struct {
	InAppPurchaseAppStoreReviewScreenshot *InAppPurchaseAppStoreReviewScreenshot
	InAppPurchaseAvailability *InAppPurchaseAvailability
	InAppPurchaseContent *InAppPurchaseContent
	InAppPurchaseImage *InAppPurchaseImage
	InAppPurchaseLocalization *InAppPurchaseLocalization
	InAppPurchasePricePoint *InAppPurchasePricePoint
	InAppPurchasePriceSchedule *InAppPurchasePriceSchedule
	PromotedPurchase *PromotedPurchase
}

// InAppPurchaseAppStoreReviewScreenshotAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchaseAppStoreReviewScreenshot wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchaseAppStoreReviewScreenshotAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchaseAppStoreReviewScreenshot) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchaseAppStoreReviewScreenshot: v,
	}
}

// InAppPurchaseAvailabilityAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchaseAvailability wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchaseAvailabilityAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchaseAvailability) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchaseAvailability: v,
	}
}

// InAppPurchaseContentAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchaseContent wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchaseContentAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchaseContent) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchaseContent: v,
	}
}

// InAppPurchaseImageAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchaseImage wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchaseImageAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchaseImage) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchaseImage: v,
	}
}

// InAppPurchaseLocalizationAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchaseLocalization wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchaseLocalizationAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchaseLocalization) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchaseLocalization: v,
	}
}

// InAppPurchasePricePointAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchasePricePoint wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchasePricePointAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchasePricePoint) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchasePricePoint: v,
	}
}

// InAppPurchasePriceScheduleAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns InAppPurchasePriceSchedule wrapped in InAppPurchasesV2ResponseIncludedInner
func InAppPurchasePriceScheduleAsInAppPurchasesV2ResponseIncludedInner(v *InAppPurchasePriceSchedule) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		InAppPurchasePriceSchedule: v,
	}
}

// PromotedPurchaseAsInAppPurchasesV2ResponseIncludedInner is a convenience function that returns PromotedPurchase wrapped in InAppPurchasesV2ResponseIncludedInner
func PromotedPurchaseAsInAppPurchasesV2ResponseIncludedInner(v *PromotedPurchase) InAppPurchasesV2ResponseIncludedInner {
	return InAppPurchasesV2ResponseIncludedInner{
		PromotedPurchase: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *InAppPurchasesV2ResponseIncludedInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into InAppPurchaseAppStoreReviewScreenshot
	err = newStrictDecoder(data).Decode(&dst.InAppPurchaseAppStoreReviewScreenshot)
	if err == nil {
		jsonInAppPurchaseAppStoreReviewScreenshot, _ := json.Marshal(dst.InAppPurchaseAppStoreReviewScreenshot)
		if string(jsonInAppPurchaseAppStoreReviewScreenshot) == "{}" { // empty struct
			dst.InAppPurchaseAppStoreReviewScreenshot = nil
		} else {
			if err = validator.Validate(dst.InAppPurchaseAppStoreReviewScreenshot); err != nil {
				dst.InAppPurchaseAppStoreReviewScreenshot = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchaseAppStoreReviewScreenshot = nil
	}

	// try to unmarshal data into InAppPurchaseAvailability
	err = newStrictDecoder(data).Decode(&dst.InAppPurchaseAvailability)
	if err == nil {
		jsonInAppPurchaseAvailability, _ := json.Marshal(dst.InAppPurchaseAvailability)
		if string(jsonInAppPurchaseAvailability) == "{}" { // empty struct
			dst.InAppPurchaseAvailability = nil
		} else {
			if err = validator.Validate(dst.InAppPurchaseAvailability); err != nil {
				dst.InAppPurchaseAvailability = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchaseAvailability = nil
	}

	// try to unmarshal data into InAppPurchaseContent
	err = newStrictDecoder(data).Decode(&dst.InAppPurchaseContent)
	if err == nil {
		jsonInAppPurchaseContent, _ := json.Marshal(dst.InAppPurchaseContent)
		if string(jsonInAppPurchaseContent) == "{}" { // empty struct
			dst.InAppPurchaseContent = nil
		} else {
			if err = validator.Validate(dst.InAppPurchaseContent); err != nil {
				dst.InAppPurchaseContent = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchaseContent = nil
	}

	// try to unmarshal data into InAppPurchaseImage
	err = newStrictDecoder(data).Decode(&dst.InAppPurchaseImage)
	if err == nil {
		jsonInAppPurchaseImage, _ := json.Marshal(dst.InAppPurchaseImage)
		if string(jsonInAppPurchaseImage) == "{}" { // empty struct
			dst.InAppPurchaseImage = nil
		} else {
			if err = validator.Validate(dst.InAppPurchaseImage); err != nil {
				dst.InAppPurchaseImage = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchaseImage = nil
	}

	// try to unmarshal data into InAppPurchaseLocalization
	err = newStrictDecoder(data).Decode(&dst.InAppPurchaseLocalization)
	if err == nil {
		jsonInAppPurchaseLocalization, _ := json.Marshal(dst.InAppPurchaseLocalization)
		if string(jsonInAppPurchaseLocalization) == "{}" { // empty struct
			dst.InAppPurchaseLocalization = nil
		} else {
			if err = validator.Validate(dst.InAppPurchaseLocalization); err != nil {
				dst.InAppPurchaseLocalization = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchaseLocalization = nil
	}

	// try to unmarshal data into InAppPurchasePricePoint
	err = newStrictDecoder(data).Decode(&dst.InAppPurchasePricePoint)
	if err == nil {
		jsonInAppPurchasePricePoint, _ := json.Marshal(dst.InAppPurchasePricePoint)
		if string(jsonInAppPurchasePricePoint) == "{}" { // empty struct
			dst.InAppPurchasePricePoint = nil
		} else {
			if err = validator.Validate(dst.InAppPurchasePricePoint); err != nil {
				dst.InAppPurchasePricePoint = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchasePricePoint = nil
	}

	// try to unmarshal data into InAppPurchasePriceSchedule
	err = newStrictDecoder(data).Decode(&dst.InAppPurchasePriceSchedule)
	if err == nil {
		jsonInAppPurchasePriceSchedule, _ := json.Marshal(dst.InAppPurchasePriceSchedule)
		if string(jsonInAppPurchasePriceSchedule) == "{}" { // empty struct
			dst.InAppPurchasePriceSchedule = nil
		} else {
			if err = validator.Validate(dst.InAppPurchasePriceSchedule); err != nil {
				dst.InAppPurchasePriceSchedule = nil
			} else {
				match++
			}
		}
	} else {
		dst.InAppPurchasePriceSchedule = nil
	}

	// try to unmarshal data into PromotedPurchase
	err = newStrictDecoder(data).Decode(&dst.PromotedPurchase)
	if err == nil {
		jsonPromotedPurchase, _ := json.Marshal(dst.PromotedPurchase)
		if string(jsonPromotedPurchase) == "{}" { // empty struct
			dst.PromotedPurchase = nil
		} else {
			if err = validator.Validate(dst.PromotedPurchase); err != nil {
				dst.PromotedPurchase = nil
			} else {
				match++
			}
		}
	} else {
		dst.PromotedPurchase = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.InAppPurchaseAppStoreReviewScreenshot = nil
		dst.InAppPurchaseAvailability = nil
		dst.InAppPurchaseContent = nil
		dst.InAppPurchaseImage = nil
		dst.InAppPurchaseLocalization = nil
		dst.InAppPurchasePricePoint = nil
		dst.InAppPurchasePriceSchedule = nil
		dst.PromotedPurchase = nil

		return fmt.Errorf("data matches more than one schema in oneOf(InAppPurchasesV2ResponseIncludedInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(InAppPurchasesV2ResponseIncludedInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src InAppPurchasesV2ResponseIncludedInner) MarshalJSON() ([]byte, error) {
	if src.InAppPurchaseAppStoreReviewScreenshot != nil {
		return json.Marshal(&src.InAppPurchaseAppStoreReviewScreenshot)
	}

	if src.InAppPurchaseAvailability != nil {
		return json.Marshal(&src.InAppPurchaseAvailability)
	}

	if src.InAppPurchaseContent != nil {
		return json.Marshal(&src.InAppPurchaseContent)
	}

	if src.InAppPurchaseImage != nil {
		return json.Marshal(&src.InAppPurchaseImage)
	}

	if src.InAppPurchaseLocalization != nil {
		return json.Marshal(&src.InAppPurchaseLocalization)
	}

	if src.InAppPurchasePricePoint != nil {
		return json.Marshal(&src.InAppPurchasePricePoint)
	}

	if src.InAppPurchasePriceSchedule != nil {
		return json.Marshal(&src.InAppPurchasePriceSchedule)
	}

	if src.PromotedPurchase != nil {
		return json.Marshal(&src.PromotedPurchase)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *InAppPurchasesV2ResponseIncludedInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.InAppPurchaseAppStoreReviewScreenshot != nil {
		return obj.InAppPurchaseAppStoreReviewScreenshot
	}

	if obj.InAppPurchaseAvailability != nil {
		return obj.InAppPurchaseAvailability
	}

	if obj.InAppPurchaseContent != nil {
		return obj.InAppPurchaseContent
	}

	if obj.InAppPurchaseImage != nil {
		return obj.InAppPurchaseImage
	}

	if obj.InAppPurchaseLocalization != nil {
		return obj.InAppPurchaseLocalization
	}

	if obj.InAppPurchasePricePoint != nil {
		return obj.InAppPurchasePricePoint
	}

	if obj.InAppPurchasePriceSchedule != nil {
		return obj.InAppPurchasePriceSchedule
	}

	if obj.PromotedPurchase != nil {
		return obj.PromotedPurchase
	}

	// all schemas are nil
	return nil
}

type NullableInAppPurchasesV2ResponseIncludedInner struct {
	value *InAppPurchasesV2ResponseIncludedInner
	isSet bool
}

func (v NullableInAppPurchasesV2ResponseIncludedInner) Get() *InAppPurchasesV2ResponseIncludedInner {
	return v.value
}

func (v *NullableInAppPurchasesV2ResponseIncludedInner) Set(val *InAppPurchasesV2ResponseIncludedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInAppPurchasesV2ResponseIncludedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInAppPurchasesV2ResponseIncludedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInAppPurchasesV2ResponseIncludedInner(val *InAppPurchasesV2ResponseIncludedInner) *NullableInAppPurchasesV2ResponseIncludedInner {
	return &NullableInAppPurchasesV2ResponseIncludedInner{value: val, isSet: true}
}

func (v NullableInAppPurchasesV2ResponseIncludedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInAppPurchasesV2ResponseIncludedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


