/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the SubscriptionRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionRelationships{}

// SubscriptionRelationships struct for SubscriptionRelationships
type SubscriptionRelationships struct {
	SubscriptionLocalizations *SubscriptionRelationshipsSubscriptionLocalizations `json:"subscriptionLocalizations,omitempty"`
	AppStoreReviewScreenshot *SubscriptionRelationshipsAppStoreReviewScreenshot `json:"appStoreReviewScreenshot,omitempty"`
	Group *SubscriptionGroupLocalizationRelationshipsSubscriptionGroup `json:"group,omitempty"`
	IntroductoryOffers *SubscriptionRelationshipsIntroductoryOffers `json:"introductoryOffers,omitempty"`
	PromotionalOffers *SubscriptionRelationshipsPromotionalOffers `json:"promotionalOffers,omitempty"`
	OfferCodes *SubscriptionRelationshipsOfferCodes `json:"offerCodes,omitempty"`
	Prices *SubscriptionRelationshipsPrices `json:"prices,omitempty"`
	PricePoints *AnalyticsReportInstanceRelationshipsSegments `json:"pricePoints,omitempty"`
	PromotedPurchase *InAppPurchaseV2RelationshipsPromotedPurchase `json:"promotedPurchase,omitempty"`
	SubscriptionAvailability *SubscriptionRelationshipsSubscriptionAvailability `json:"subscriptionAvailability,omitempty"`
	WinBackOffers *SubscriptionRelationshipsWinBackOffers `json:"winBackOffers,omitempty"`
	Images *SubscriptionRelationshipsImages `json:"images,omitempty"`
}

// NewSubscriptionRelationships instantiates a new SubscriptionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionRelationships() *SubscriptionRelationships {
	this := SubscriptionRelationships{}
	return &this
}

// NewSubscriptionRelationshipsWithDefaults instantiates a new SubscriptionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionRelationshipsWithDefaults() *SubscriptionRelationships {
	this := SubscriptionRelationships{}
	return &this
}

// GetSubscriptionLocalizations returns the SubscriptionLocalizations field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetSubscriptionLocalizations() SubscriptionRelationshipsSubscriptionLocalizations {
	if o == nil || IsNil(o.SubscriptionLocalizations) {
		var ret SubscriptionRelationshipsSubscriptionLocalizations
		return ret
	}
	return *o.SubscriptionLocalizations
}

// GetSubscriptionLocalizationsOk returns a tuple with the SubscriptionLocalizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetSubscriptionLocalizationsOk() (*SubscriptionRelationshipsSubscriptionLocalizations, bool) {
	if o == nil || IsNil(o.SubscriptionLocalizations) {
		return nil, false
	}
	return o.SubscriptionLocalizations, true
}

// HasSubscriptionLocalizations returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasSubscriptionLocalizations() bool {
	if o != nil && !IsNil(o.SubscriptionLocalizations) {
		return true
	}

	return false
}

// SetSubscriptionLocalizations gets a reference to the given SubscriptionRelationshipsSubscriptionLocalizations and assigns it to the SubscriptionLocalizations field.
func (o *SubscriptionRelationships) SetSubscriptionLocalizations(v SubscriptionRelationshipsSubscriptionLocalizations) {
	o.SubscriptionLocalizations = &v
}

// GetAppStoreReviewScreenshot returns the AppStoreReviewScreenshot field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetAppStoreReviewScreenshot() SubscriptionRelationshipsAppStoreReviewScreenshot {
	if o == nil || IsNil(o.AppStoreReviewScreenshot) {
		var ret SubscriptionRelationshipsAppStoreReviewScreenshot
		return ret
	}
	return *o.AppStoreReviewScreenshot
}

// GetAppStoreReviewScreenshotOk returns a tuple with the AppStoreReviewScreenshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetAppStoreReviewScreenshotOk() (*SubscriptionRelationshipsAppStoreReviewScreenshot, bool) {
	if o == nil || IsNil(o.AppStoreReviewScreenshot) {
		return nil, false
	}
	return o.AppStoreReviewScreenshot, true
}

// HasAppStoreReviewScreenshot returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasAppStoreReviewScreenshot() bool {
	if o != nil && !IsNil(o.AppStoreReviewScreenshot) {
		return true
	}

	return false
}

// SetAppStoreReviewScreenshot gets a reference to the given SubscriptionRelationshipsAppStoreReviewScreenshot and assigns it to the AppStoreReviewScreenshot field.
func (o *SubscriptionRelationships) SetAppStoreReviewScreenshot(v SubscriptionRelationshipsAppStoreReviewScreenshot) {
	o.AppStoreReviewScreenshot = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetGroup() SubscriptionGroupLocalizationRelationshipsSubscriptionGroup {
	if o == nil || IsNil(o.Group) {
		var ret SubscriptionGroupLocalizationRelationshipsSubscriptionGroup
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetGroupOk() (*SubscriptionGroupLocalizationRelationshipsSubscriptionGroup, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given SubscriptionGroupLocalizationRelationshipsSubscriptionGroup and assigns it to the Group field.
func (o *SubscriptionRelationships) SetGroup(v SubscriptionGroupLocalizationRelationshipsSubscriptionGroup) {
	o.Group = &v
}

// GetIntroductoryOffers returns the IntroductoryOffers field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetIntroductoryOffers() SubscriptionRelationshipsIntroductoryOffers {
	if o == nil || IsNil(o.IntroductoryOffers) {
		var ret SubscriptionRelationshipsIntroductoryOffers
		return ret
	}
	return *o.IntroductoryOffers
}

// GetIntroductoryOffersOk returns a tuple with the IntroductoryOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetIntroductoryOffersOk() (*SubscriptionRelationshipsIntroductoryOffers, bool) {
	if o == nil || IsNil(o.IntroductoryOffers) {
		return nil, false
	}
	return o.IntroductoryOffers, true
}

// HasIntroductoryOffers returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasIntroductoryOffers() bool {
	if o != nil && !IsNil(o.IntroductoryOffers) {
		return true
	}

	return false
}

// SetIntroductoryOffers gets a reference to the given SubscriptionRelationshipsIntroductoryOffers and assigns it to the IntroductoryOffers field.
func (o *SubscriptionRelationships) SetIntroductoryOffers(v SubscriptionRelationshipsIntroductoryOffers) {
	o.IntroductoryOffers = &v
}

// GetPromotionalOffers returns the PromotionalOffers field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetPromotionalOffers() SubscriptionRelationshipsPromotionalOffers {
	if o == nil || IsNil(o.PromotionalOffers) {
		var ret SubscriptionRelationshipsPromotionalOffers
		return ret
	}
	return *o.PromotionalOffers
}

// GetPromotionalOffersOk returns a tuple with the PromotionalOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetPromotionalOffersOk() (*SubscriptionRelationshipsPromotionalOffers, bool) {
	if o == nil || IsNil(o.PromotionalOffers) {
		return nil, false
	}
	return o.PromotionalOffers, true
}

// HasPromotionalOffers returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasPromotionalOffers() bool {
	if o != nil && !IsNil(o.PromotionalOffers) {
		return true
	}

	return false
}

// SetPromotionalOffers gets a reference to the given SubscriptionRelationshipsPromotionalOffers and assigns it to the PromotionalOffers field.
func (o *SubscriptionRelationships) SetPromotionalOffers(v SubscriptionRelationshipsPromotionalOffers) {
	o.PromotionalOffers = &v
}

// GetOfferCodes returns the OfferCodes field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetOfferCodes() SubscriptionRelationshipsOfferCodes {
	if o == nil || IsNil(o.OfferCodes) {
		var ret SubscriptionRelationshipsOfferCodes
		return ret
	}
	return *o.OfferCodes
}

// GetOfferCodesOk returns a tuple with the OfferCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetOfferCodesOk() (*SubscriptionRelationshipsOfferCodes, bool) {
	if o == nil || IsNil(o.OfferCodes) {
		return nil, false
	}
	return o.OfferCodes, true
}

// HasOfferCodes returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasOfferCodes() bool {
	if o != nil && !IsNil(o.OfferCodes) {
		return true
	}

	return false
}

// SetOfferCodes gets a reference to the given SubscriptionRelationshipsOfferCodes and assigns it to the OfferCodes field.
func (o *SubscriptionRelationships) SetOfferCodes(v SubscriptionRelationshipsOfferCodes) {
	o.OfferCodes = &v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetPrices() SubscriptionRelationshipsPrices {
	if o == nil || IsNil(o.Prices) {
		var ret SubscriptionRelationshipsPrices
		return ret
	}
	return *o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetPricesOk() (*SubscriptionRelationshipsPrices, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given SubscriptionRelationshipsPrices and assigns it to the Prices field.
func (o *SubscriptionRelationships) SetPrices(v SubscriptionRelationshipsPrices) {
	o.Prices = &v
}

// GetPricePoints returns the PricePoints field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetPricePoints() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.PricePoints) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.PricePoints
}

// GetPricePointsOk returns a tuple with the PricePoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetPricePointsOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.PricePoints) {
		return nil, false
	}
	return o.PricePoints, true
}

// HasPricePoints returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasPricePoints() bool {
	if o != nil && !IsNil(o.PricePoints) {
		return true
	}

	return false
}

// SetPricePoints gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the PricePoints field.
func (o *SubscriptionRelationships) SetPricePoints(v AnalyticsReportInstanceRelationshipsSegments) {
	o.PricePoints = &v
}

// GetPromotedPurchase returns the PromotedPurchase field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetPromotedPurchase() InAppPurchaseV2RelationshipsPromotedPurchase {
	if o == nil || IsNil(o.PromotedPurchase) {
		var ret InAppPurchaseV2RelationshipsPromotedPurchase
		return ret
	}
	return *o.PromotedPurchase
}

// GetPromotedPurchaseOk returns a tuple with the PromotedPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetPromotedPurchaseOk() (*InAppPurchaseV2RelationshipsPromotedPurchase, bool) {
	if o == nil || IsNil(o.PromotedPurchase) {
		return nil, false
	}
	return o.PromotedPurchase, true
}

// HasPromotedPurchase returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasPromotedPurchase() bool {
	if o != nil && !IsNil(o.PromotedPurchase) {
		return true
	}

	return false
}

// SetPromotedPurchase gets a reference to the given InAppPurchaseV2RelationshipsPromotedPurchase and assigns it to the PromotedPurchase field.
func (o *SubscriptionRelationships) SetPromotedPurchase(v InAppPurchaseV2RelationshipsPromotedPurchase) {
	o.PromotedPurchase = &v
}

// GetSubscriptionAvailability returns the SubscriptionAvailability field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetSubscriptionAvailability() SubscriptionRelationshipsSubscriptionAvailability {
	if o == nil || IsNil(o.SubscriptionAvailability) {
		var ret SubscriptionRelationshipsSubscriptionAvailability
		return ret
	}
	return *o.SubscriptionAvailability
}

// GetSubscriptionAvailabilityOk returns a tuple with the SubscriptionAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetSubscriptionAvailabilityOk() (*SubscriptionRelationshipsSubscriptionAvailability, bool) {
	if o == nil || IsNil(o.SubscriptionAvailability) {
		return nil, false
	}
	return o.SubscriptionAvailability, true
}

// HasSubscriptionAvailability returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasSubscriptionAvailability() bool {
	if o != nil && !IsNil(o.SubscriptionAvailability) {
		return true
	}

	return false
}

// SetSubscriptionAvailability gets a reference to the given SubscriptionRelationshipsSubscriptionAvailability and assigns it to the SubscriptionAvailability field.
func (o *SubscriptionRelationships) SetSubscriptionAvailability(v SubscriptionRelationshipsSubscriptionAvailability) {
	o.SubscriptionAvailability = &v
}

// GetWinBackOffers returns the WinBackOffers field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetWinBackOffers() SubscriptionRelationshipsWinBackOffers {
	if o == nil || IsNil(o.WinBackOffers) {
		var ret SubscriptionRelationshipsWinBackOffers
		return ret
	}
	return *o.WinBackOffers
}

// GetWinBackOffersOk returns a tuple with the WinBackOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetWinBackOffersOk() (*SubscriptionRelationshipsWinBackOffers, bool) {
	if o == nil || IsNil(o.WinBackOffers) {
		return nil, false
	}
	return o.WinBackOffers, true
}

// HasWinBackOffers returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasWinBackOffers() bool {
	if o != nil && !IsNil(o.WinBackOffers) {
		return true
	}

	return false
}

// SetWinBackOffers gets a reference to the given SubscriptionRelationshipsWinBackOffers and assigns it to the WinBackOffers field.
func (o *SubscriptionRelationships) SetWinBackOffers(v SubscriptionRelationshipsWinBackOffers) {
	o.WinBackOffers = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *SubscriptionRelationships) GetImages() SubscriptionRelationshipsImages {
	if o == nil || IsNil(o.Images) {
		var ret SubscriptionRelationshipsImages
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionRelationships) GetImagesOk() (*SubscriptionRelationshipsImages, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *SubscriptionRelationships) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given SubscriptionRelationshipsImages and assigns it to the Images field.
func (o *SubscriptionRelationships) SetImages(v SubscriptionRelationshipsImages) {
	o.Images = &v
}

func (o SubscriptionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionLocalizations) {
		toSerialize["subscriptionLocalizations"] = o.SubscriptionLocalizations
	}
	if !IsNil(o.AppStoreReviewScreenshot) {
		toSerialize["appStoreReviewScreenshot"] = o.AppStoreReviewScreenshot
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.IntroductoryOffers) {
		toSerialize["introductoryOffers"] = o.IntroductoryOffers
	}
	if !IsNil(o.PromotionalOffers) {
		toSerialize["promotionalOffers"] = o.PromotionalOffers
	}
	if !IsNil(o.OfferCodes) {
		toSerialize["offerCodes"] = o.OfferCodes
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	if !IsNil(o.PricePoints) {
		toSerialize["pricePoints"] = o.PricePoints
	}
	if !IsNil(o.PromotedPurchase) {
		toSerialize["promotedPurchase"] = o.PromotedPurchase
	}
	if !IsNil(o.SubscriptionAvailability) {
		toSerialize["subscriptionAvailability"] = o.SubscriptionAvailability
	}
	if !IsNil(o.WinBackOffers) {
		toSerialize["winBackOffers"] = o.WinBackOffers
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableSubscriptionRelationships struct {
	value *SubscriptionRelationships
	isSet bool
}

func (v NullableSubscriptionRelationships) Get() *SubscriptionRelationships {
	return v.value
}

func (v *NullableSubscriptionRelationships) Set(val *SubscriptionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionRelationships(val *SubscriptionRelationships) *NullableSubscriptionRelationships {
	return &NullableSubscriptionRelationships{value: val, isSet: true}
}

func (v NullableSubscriptionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


