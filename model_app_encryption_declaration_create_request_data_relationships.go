/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppEncryptionDeclarationCreateRequestDataRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppEncryptionDeclarationCreateRequestDataRelationships{}

// AppEncryptionDeclarationCreateRequestDataRelationships struct for AppEncryptionDeclarationCreateRequestDataRelationships
type AppEncryptionDeclarationCreateRequestDataRelationships struct {
	// Deprecated
	App AppEncryptionDeclarationCreateRequestDataRelationshipsApp `json:"app"`
}

type _AppEncryptionDeclarationCreateRequestDataRelationships AppEncryptionDeclarationCreateRequestDataRelationships

// NewAppEncryptionDeclarationCreateRequestDataRelationships instantiates a new AppEncryptionDeclarationCreateRequestDataRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppEncryptionDeclarationCreateRequestDataRelationships(app AppEncryptionDeclarationCreateRequestDataRelationshipsApp) *AppEncryptionDeclarationCreateRequestDataRelationships {
	this := AppEncryptionDeclarationCreateRequestDataRelationships{}
	this.App = app
	return &this
}

// NewAppEncryptionDeclarationCreateRequestDataRelationshipsWithDefaults instantiates a new AppEncryptionDeclarationCreateRequestDataRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppEncryptionDeclarationCreateRequestDataRelationshipsWithDefaults() *AppEncryptionDeclarationCreateRequestDataRelationships {
	this := AppEncryptionDeclarationCreateRequestDataRelationships{}
	return &this
}

// GetApp returns the App field value
// Deprecated
func (o *AppEncryptionDeclarationCreateRequestDataRelationships) GetApp() AppEncryptionDeclarationCreateRequestDataRelationshipsApp {
	if o == nil {
		var ret AppEncryptionDeclarationCreateRequestDataRelationshipsApp
		return ret
	}

	return o.App
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *AppEncryptionDeclarationCreateRequestDataRelationships) GetAppOk() (*AppEncryptionDeclarationCreateRequestDataRelationshipsApp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.App, true
}

// SetApp sets field value
// Deprecated
func (o *AppEncryptionDeclarationCreateRequestDataRelationships) SetApp(v AppEncryptionDeclarationCreateRequestDataRelationshipsApp) {
	o.App = v
}

func (o AppEncryptionDeclarationCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppEncryptionDeclarationCreateRequestDataRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["app"] = o.App
	return toSerialize, nil
}

func (o *AppEncryptionDeclarationCreateRequestDataRelationships) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"app",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppEncryptionDeclarationCreateRequestDataRelationships := _AppEncryptionDeclarationCreateRequestDataRelationships{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppEncryptionDeclarationCreateRequestDataRelationships)

	if err != nil {
		return err
	}

	*o = AppEncryptionDeclarationCreateRequestDataRelationships(varAppEncryptionDeclarationCreateRequestDataRelationships)

	return err
}

type NullableAppEncryptionDeclarationCreateRequestDataRelationships struct {
	value *AppEncryptionDeclarationCreateRequestDataRelationships
	isSet bool
}

func (v NullableAppEncryptionDeclarationCreateRequestDataRelationships) Get() *AppEncryptionDeclarationCreateRequestDataRelationships {
	return v.value
}

func (v *NullableAppEncryptionDeclarationCreateRequestDataRelationships) Set(val *AppEncryptionDeclarationCreateRequestDataRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppEncryptionDeclarationCreateRequestDataRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppEncryptionDeclarationCreateRequestDataRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppEncryptionDeclarationCreateRequestDataRelationships(val *AppEncryptionDeclarationCreateRequestDataRelationships) *NullableAppEncryptionDeclarationCreateRequestDataRelationships {
	return &NullableAppEncryptionDeclarationCreateRequestDataRelationships{value: val, isSet: true}
}

func (v NullableAppEncryptionDeclarationCreateRequestDataRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppEncryptionDeclarationCreateRequestDataRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


