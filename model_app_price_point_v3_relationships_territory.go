/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the AppPricePointV3RelationshipsTerritory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppPricePointV3RelationshipsTerritory{}

// AppPricePointV3RelationshipsTerritory struct for AppPricePointV3RelationshipsTerritory
type AppPricePointV3RelationshipsTerritory struct {
	Data *AppAvailabilityRelationshipsAvailableTerritoriesDataInner `json:"data,omitempty"`
}

// NewAppPricePointV3RelationshipsTerritory instantiates a new AppPricePointV3RelationshipsTerritory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppPricePointV3RelationshipsTerritory() *AppPricePointV3RelationshipsTerritory {
	this := AppPricePointV3RelationshipsTerritory{}
	return &this
}

// NewAppPricePointV3RelationshipsTerritoryWithDefaults instantiates a new AppPricePointV3RelationshipsTerritory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppPricePointV3RelationshipsTerritoryWithDefaults() *AppPricePointV3RelationshipsTerritory {
	this := AppPricePointV3RelationshipsTerritory{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AppPricePointV3RelationshipsTerritory) GetData() AppAvailabilityRelationshipsAvailableTerritoriesDataInner {
	if o == nil || IsNil(o.Data) {
		var ret AppAvailabilityRelationshipsAvailableTerritoriesDataInner
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppPricePointV3RelationshipsTerritory) GetDataOk() (*AppAvailabilityRelationshipsAvailableTerritoriesDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AppPricePointV3RelationshipsTerritory) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AppAvailabilityRelationshipsAvailableTerritoriesDataInner and assigns it to the Data field.
func (o *AppPricePointV3RelationshipsTerritory) SetData(v AppAvailabilityRelationshipsAvailableTerritoriesDataInner) {
	o.Data = &v
}

func (o AppPricePointV3RelationshipsTerritory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppPricePointV3RelationshipsTerritory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAppPricePointV3RelationshipsTerritory struct {
	value *AppPricePointV3RelationshipsTerritory
	isSet bool
}

func (v NullableAppPricePointV3RelationshipsTerritory) Get() *AppPricePointV3RelationshipsTerritory {
	return v.value
}

func (v *NullableAppPricePointV3RelationshipsTerritory) Set(val *AppPricePointV3RelationshipsTerritory) {
	v.value = val
	v.isSet = true
}

func (v NullableAppPricePointV3RelationshipsTerritory) IsSet() bool {
	return v.isSet
}

func (v *NullableAppPricePointV3RelationshipsTerritory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppPricePointV3RelationshipsTerritory(val *AppPricePointV3RelationshipsTerritory) *NullableAppPricePointV3RelationshipsTerritory {
	return &NullableAppPricePointV3RelationshipsTerritory{value: val, isSet: true}
}

func (v NullableAppPricePointV3RelationshipsTerritory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppPricePointV3RelationshipsTerritory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


