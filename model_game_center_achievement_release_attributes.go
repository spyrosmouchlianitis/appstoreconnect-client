/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the GameCenterAchievementReleaseAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterAchievementReleaseAttributes{}

// GameCenterAchievementReleaseAttributes struct for GameCenterAchievementReleaseAttributes
type GameCenterAchievementReleaseAttributes struct {
	Live *bool `json:"live,omitempty"`
}

// NewGameCenterAchievementReleaseAttributes instantiates a new GameCenterAchievementReleaseAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterAchievementReleaseAttributes() *GameCenterAchievementReleaseAttributes {
	this := GameCenterAchievementReleaseAttributes{}
	return &this
}

// NewGameCenterAchievementReleaseAttributesWithDefaults instantiates a new GameCenterAchievementReleaseAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterAchievementReleaseAttributesWithDefaults() *GameCenterAchievementReleaseAttributes {
	this := GameCenterAchievementReleaseAttributes{}
	return &this
}

// GetLive returns the Live field value if set, zero value otherwise.
func (o *GameCenterAchievementReleaseAttributes) GetLive() bool {
	if o == nil || IsNil(o.Live) {
		var ret bool
		return ret
	}
	return *o.Live
}

// GetLiveOk returns a tuple with the Live field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementReleaseAttributes) GetLiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Live) {
		return nil, false
	}
	return o.Live, true
}

// HasLive returns a boolean if a field has been set.
func (o *GameCenterAchievementReleaseAttributes) HasLive() bool {
	if o != nil && !IsNil(o.Live) {
		return true
	}

	return false
}

// SetLive gets a reference to the given bool and assigns it to the Live field.
func (o *GameCenterAchievementReleaseAttributes) SetLive(v bool) {
	o.Live = &v
}

func (o GameCenterAchievementReleaseAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterAchievementReleaseAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Live) {
		toSerialize["live"] = o.Live
	}
	return toSerialize, nil
}

type NullableGameCenterAchievementReleaseAttributes struct {
	value *GameCenterAchievementReleaseAttributes
	isSet bool
}

func (v NullableGameCenterAchievementReleaseAttributes) Get() *GameCenterAchievementReleaseAttributes {
	return v.value
}

func (v *NullableGameCenterAchievementReleaseAttributes) Set(val *GameCenterAchievementReleaseAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterAchievementReleaseAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterAchievementReleaseAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterAchievementReleaseAttributes(val *GameCenterAchievementReleaseAttributes) *NullableGameCenterAchievementReleaseAttributes {
	return &NullableGameCenterAchievementReleaseAttributes{value: val, isSet: true}
}

func (v NullableGameCenterAchievementReleaseAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterAchievementReleaseAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


