/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the GameCenterMatchmakingRuleSetTestAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterMatchmakingRuleSetTestAttributes{}

// GameCenterMatchmakingRuleSetTestAttributes struct for GameCenterMatchmakingRuleSetTestAttributes
type GameCenterMatchmakingRuleSetTestAttributes struct {
	MatchmakingResults [][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner `json:"matchmakingResults,omitempty"`
}

// NewGameCenterMatchmakingRuleSetTestAttributes instantiates a new GameCenterMatchmakingRuleSetTestAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterMatchmakingRuleSetTestAttributes() *GameCenterMatchmakingRuleSetTestAttributes {
	this := GameCenterMatchmakingRuleSetTestAttributes{}
	return &this
}

// NewGameCenterMatchmakingRuleSetTestAttributesWithDefaults instantiates a new GameCenterMatchmakingRuleSetTestAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterMatchmakingRuleSetTestAttributesWithDefaults() *GameCenterMatchmakingRuleSetTestAttributes {
	this := GameCenterMatchmakingRuleSetTestAttributes{}
	return &this
}

// GetMatchmakingResults returns the MatchmakingResults field value if set, zero value otherwise.
func (o *GameCenterMatchmakingRuleSetTestAttributes) GetMatchmakingResults() [][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner {
	if o == nil || IsNil(o.MatchmakingResults) {
		var ret [][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner
		return ret
	}
	return o.MatchmakingResults
}

// GetMatchmakingResultsOk returns a tuple with the MatchmakingResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingRuleSetTestAttributes) GetMatchmakingResultsOk() ([][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner, bool) {
	if o == nil || IsNil(o.MatchmakingResults) {
		return nil, false
	}
	return o.MatchmakingResults, true
}

// HasMatchmakingResults returns a boolean if a field has been set.
func (o *GameCenterMatchmakingRuleSetTestAttributes) HasMatchmakingResults() bool {
	if o != nil && !IsNil(o.MatchmakingResults) {
		return true
	}

	return false
}

// SetMatchmakingResults gets a reference to the given [][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner and assigns it to the MatchmakingResults field.
func (o *GameCenterMatchmakingRuleSetTestAttributes) SetMatchmakingResults(v [][]GameCenterMatchmakingRuleSetTestAttributesMatchmakingResultsInnerInner) {
	o.MatchmakingResults = v
}

func (o GameCenterMatchmakingRuleSetTestAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterMatchmakingRuleSetTestAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchmakingResults) {
		toSerialize["matchmakingResults"] = o.MatchmakingResults
	}
	return toSerialize, nil
}

type NullableGameCenterMatchmakingRuleSetTestAttributes struct {
	value *GameCenterMatchmakingRuleSetTestAttributes
	isSet bool
}

func (v NullableGameCenterMatchmakingRuleSetTestAttributes) Get() *GameCenterMatchmakingRuleSetTestAttributes {
	return v.value
}

func (v *NullableGameCenterMatchmakingRuleSetTestAttributes) Set(val *GameCenterMatchmakingRuleSetTestAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterMatchmakingRuleSetTestAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterMatchmakingRuleSetTestAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterMatchmakingRuleSetTestAttributes(val *GameCenterMatchmakingRuleSetTestAttributes) *NullableGameCenterMatchmakingRuleSetTestAttributes {
	return &NullableGameCenterMatchmakingRuleSetTestAttributes{value: val, isSet: true}
}

func (v NullableGameCenterMatchmakingRuleSetTestAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterMatchmakingRuleSetTestAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


