/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the ReviewSubmissionRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReviewSubmissionRelationships{}

// ReviewSubmissionRelationships struct for ReviewSubmissionRelationships
type ReviewSubmissionRelationships struct {
	App *AlternativeDistributionKeyCreateRequestDataRelationshipsApp `json:"app,omitempty"`
	Items *ReviewSubmissionRelationshipsItems `json:"items,omitempty"`
	AppStoreVersionForReview *AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion `json:"appStoreVersionForReview,omitempty"`
	SubmittedByActor *ReviewSubmissionRelationshipsSubmittedByActor `json:"submittedByActor,omitempty"`
	LastUpdatedByActor *ReviewSubmissionRelationshipsSubmittedByActor `json:"lastUpdatedByActor,omitempty"`
}

// NewReviewSubmissionRelationships instantiates a new ReviewSubmissionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReviewSubmissionRelationships() *ReviewSubmissionRelationships {
	this := ReviewSubmissionRelationships{}
	return &this
}

// NewReviewSubmissionRelationshipsWithDefaults instantiates a new ReviewSubmissionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReviewSubmissionRelationshipsWithDefaults() *ReviewSubmissionRelationships {
	this := ReviewSubmissionRelationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ReviewSubmissionRelationships) GetApp() AlternativeDistributionKeyCreateRequestDataRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret AlternativeDistributionKeyCreateRequestDataRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionRelationships) GetAppOk() (*AlternativeDistributionKeyCreateRequestDataRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *ReviewSubmissionRelationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AlternativeDistributionKeyCreateRequestDataRelationshipsApp and assigns it to the App field.
func (o *ReviewSubmissionRelationships) SetApp(v AlternativeDistributionKeyCreateRequestDataRelationshipsApp) {
	o.App = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ReviewSubmissionRelationships) GetItems() ReviewSubmissionRelationshipsItems {
	if o == nil || IsNil(o.Items) {
		var ret ReviewSubmissionRelationshipsItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionRelationships) GetItemsOk() (*ReviewSubmissionRelationshipsItems, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ReviewSubmissionRelationships) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given ReviewSubmissionRelationshipsItems and assigns it to the Items field.
func (o *ReviewSubmissionRelationships) SetItems(v ReviewSubmissionRelationshipsItems) {
	o.Items = &v
}

// GetAppStoreVersionForReview returns the AppStoreVersionForReview field value if set, zero value otherwise.
func (o *ReviewSubmissionRelationships) GetAppStoreVersionForReview() AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.AppStoreVersionForReview) {
		var ret AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.AppStoreVersionForReview
}

// GetAppStoreVersionForReviewOk returns a tuple with the AppStoreVersionForReview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionRelationships) GetAppStoreVersionForReviewOk() (*AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.AppStoreVersionForReview) {
		return nil, false
	}
	return o.AppStoreVersionForReview, true
}

// HasAppStoreVersionForReview returns a boolean if a field has been set.
func (o *ReviewSubmissionRelationships) HasAppStoreVersionForReview() bool {
	if o != nil && !IsNil(o.AppStoreVersionForReview) {
		return true
	}

	return false
}

// SetAppStoreVersionForReview gets a reference to the given AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion and assigns it to the AppStoreVersionForReview field.
func (o *ReviewSubmissionRelationships) SetAppStoreVersionForReview(v AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion) {
	o.AppStoreVersionForReview = &v
}

// GetSubmittedByActor returns the SubmittedByActor field value if set, zero value otherwise.
func (o *ReviewSubmissionRelationships) GetSubmittedByActor() ReviewSubmissionRelationshipsSubmittedByActor {
	if o == nil || IsNil(o.SubmittedByActor) {
		var ret ReviewSubmissionRelationshipsSubmittedByActor
		return ret
	}
	return *o.SubmittedByActor
}

// GetSubmittedByActorOk returns a tuple with the SubmittedByActor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionRelationships) GetSubmittedByActorOk() (*ReviewSubmissionRelationshipsSubmittedByActor, bool) {
	if o == nil || IsNil(o.SubmittedByActor) {
		return nil, false
	}
	return o.SubmittedByActor, true
}

// HasSubmittedByActor returns a boolean if a field has been set.
func (o *ReviewSubmissionRelationships) HasSubmittedByActor() bool {
	if o != nil && !IsNil(o.SubmittedByActor) {
		return true
	}

	return false
}

// SetSubmittedByActor gets a reference to the given ReviewSubmissionRelationshipsSubmittedByActor and assigns it to the SubmittedByActor field.
func (o *ReviewSubmissionRelationships) SetSubmittedByActor(v ReviewSubmissionRelationshipsSubmittedByActor) {
	o.SubmittedByActor = &v
}

// GetLastUpdatedByActor returns the LastUpdatedByActor field value if set, zero value otherwise.
func (o *ReviewSubmissionRelationships) GetLastUpdatedByActor() ReviewSubmissionRelationshipsSubmittedByActor {
	if o == nil || IsNil(o.LastUpdatedByActor) {
		var ret ReviewSubmissionRelationshipsSubmittedByActor
		return ret
	}
	return *o.LastUpdatedByActor
}

// GetLastUpdatedByActorOk returns a tuple with the LastUpdatedByActor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReviewSubmissionRelationships) GetLastUpdatedByActorOk() (*ReviewSubmissionRelationshipsSubmittedByActor, bool) {
	if o == nil || IsNil(o.LastUpdatedByActor) {
		return nil, false
	}
	return o.LastUpdatedByActor, true
}

// HasLastUpdatedByActor returns a boolean if a field has been set.
func (o *ReviewSubmissionRelationships) HasLastUpdatedByActor() bool {
	if o != nil && !IsNil(o.LastUpdatedByActor) {
		return true
	}

	return false
}

// SetLastUpdatedByActor gets a reference to the given ReviewSubmissionRelationshipsSubmittedByActor and assigns it to the LastUpdatedByActor field.
func (o *ReviewSubmissionRelationships) SetLastUpdatedByActor(v ReviewSubmissionRelationshipsSubmittedByActor) {
	o.LastUpdatedByActor = &v
}

func (o ReviewSubmissionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReviewSubmissionRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.AppStoreVersionForReview) {
		toSerialize["appStoreVersionForReview"] = o.AppStoreVersionForReview
	}
	if !IsNil(o.SubmittedByActor) {
		toSerialize["submittedByActor"] = o.SubmittedByActor
	}
	if !IsNil(o.LastUpdatedByActor) {
		toSerialize["lastUpdatedByActor"] = o.LastUpdatedByActor
	}
	return toSerialize, nil
}

type NullableReviewSubmissionRelationships struct {
	value *ReviewSubmissionRelationships
	isSet bool
}

func (v NullableReviewSubmissionRelationships) Get() *ReviewSubmissionRelationships {
	return v.value
}

func (v *NullableReviewSubmissionRelationships) Set(val *ReviewSubmissionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableReviewSubmissionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableReviewSubmissionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReviewSubmissionRelationships(val *ReviewSubmissionRelationships) *NullableReviewSubmissionRelationships {
	return &NullableReviewSubmissionRelationships{value: val, isSet: true}
}

func (v NullableReviewSubmissionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReviewSubmissionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


