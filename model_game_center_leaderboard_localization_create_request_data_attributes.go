/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GameCenterLeaderboardLocalizationCreateRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardLocalizationCreateRequestDataAttributes{}

// GameCenterLeaderboardLocalizationCreateRequestDataAttributes struct for GameCenterLeaderboardLocalizationCreateRequestDataAttributes
type GameCenterLeaderboardLocalizationCreateRequestDataAttributes struct {
	Locale string `json:"locale"`
	Name string `json:"name"`
	FormatterOverride *GameCenterLeaderboardFormatter `json:"formatterOverride,omitempty"`
	FormatterSuffix *string `json:"formatterSuffix,omitempty"`
	FormatterSuffixSingular *string `json:"formatterSuffixSingular,omitempty"`
}

type _GameCenterLeaderboardLocalizationCreateRequestDataAttributes GameCenterLeaderboardLocalizationCreateRequestDataAttributes

// NewGameCenterLeaderboardLocalizationCreateRequestDataAttributes instantiates a new GameCenterLeaderboardLocalizationCreateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardLocalizationCreateRequestDataAttributes(locale string, name string) *GameCenterLeaderboardLocalizationCreateRequestDataAttributes {
	this := GameCenterLeaderboardLocalizationCreateRequestDataAttributes{}
	this.Locale = locale
	this.Name = name
	return &this
}

// NewGameCenterLeaderboardLocalizationCreateRequestDataAttributesWithDefaults instantiates a new GameCenterLeaderboardLocalizationCreateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardLocalizationCreateRequestDataAttributesWithDefaults() *GameCenterLeaderboardLocalizationCreateRequestDataAttributes {
	this := GameCenterLeaderboardLocalizationCreateRequestDataAttributes{}
	return &this
}

// GetLocale returns the Locale field value
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetLocale() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locale, true
}

// SetLocale sets field value
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) SetLocale(v string) {
	o.Locale = v
}

// GetName returns the Name field value
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) SetName(v string) {
	o.Name = v
}

// GetFormatterOverride returns the FormatterOverride field value if set, zero value otherwise.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterOverride() GameCenterLeaderboardFormatter {
	if o == nil || IsNil(o.FormatterOverride) {
		var ret GameCenterLeaderboardFormatter
		return ret
	}
	return *o.FormatterOverride
}

// GetFormatterOverrideOk returns a tuple with the FormatterOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterOverrideOk() (*GameCenterLeaderboardFormatter, bool) {
	if o == nil || IsNil(o.FormatterOverride) {
		return nil, false
	}
	return o.FormatterOverride, true
}

// HasFormatterOverride returns a boolean if a field has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) HasFormatterOverride() bool {
	if o != nil && !IsNil(o.FormatterOverride) {
		return true
	}

	return false
}

// SetFormatterOverride gets a reference to the given GameCenterLeaderboardFormatter and assigns it to the FormatterOverride field.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) SetFormatterOverride(v GameCenterLeaderboardFormatter) {
	o.FormatterOverride = &v
}

// GetFormatterSuffix returns the FormatterSuffix field value if set, zero value otherwise.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterSuffix() string {
	if o == nil || IsNil(o.FormatterSuffix) {
		var ret string
		return ret
	}
	return *o.FormatterSuffix
}

// GetFormatterSuffixOk returns a tuple with the FormatterSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterSuffixOk() (*string, bool) {
	if o == nil || IsNil(o.FormatterSuffix) {
		return nil, false
	}
	return o.FormatterSuffix, true
}

// HasFormatterSuffix returns a boolean if a field has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) HasFormatterSuffix() bool {
	if o != nil && !IsNil(o.FormatterSuffix) {
		return true
	}

	return false
}

// SetFormatterSuffix gets a reference to the given string and assigns it to the FormatterSuffix field.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) SetFormatterSuffix(v string) {
	o.FormatterSuffix = &v
}

// GetFormatterSuffixSingular returns the FormatterSuffixSingular field value if set, zero value otherwise.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterSuffixSingular() string {
	if o == nil || IsNil(o.FormatterSuffixSingular) {
		var ret string
		return ret
	}
	return *o.FormatterSuffixSingular
}

// GetFormatterSuffixSingularOk returns a tuple with the FormatterSuffixSingular field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) GetFormatterSuffixSingularOk() (*string, bool) {
	if o == nil || IsNil(o.FormatterSuffixSingular) {
		return nil, false
	}
	return o.FormatterSuffixSingular, true
}

// HasFormatterSuffixSingular returns a boolean if a field has been set.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) HasFormatterSuffixSingular() bool {
	if o != nil && !IsNil(o.FormatterSuffixSingular) {
		return true
	}

	return false
}

// SetFormatterSuffixSingular gets a reference to the given string and assigns it to the FormatterSuffixSingular field.
func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) SetFormatterSuffixSingular(v string) {
	o.FormatterSuffixSingular = &v
}

func (o GameCenterLeaderboardLocalizationCreateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardLocalizationCreateRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locale"] = o.Locale
	toSerialize["name"] = o.Name
	if !IsNil(o.FormatterOverride) {
		toSerialize["formatterOverride"] = o.FormatterOverride
	}
	if !IsNil(o.FormatterSuffix) {
		toSerialize["formatterSuffix"] = o.FormatterSuffix
	}
	if !IsNil(o.FormatterSuffixSingular) {
		toSerialize["formatterSuffixSingular"] = o.FormatterSuffixSingular
	}
	return toSerialize, nil
}

func (o *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locale",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGameCenterLeaderboardLocalizationCreateRequestDataAttributes := _GameCenterLeaderboardLocalizationCreateRequestDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGameCenterLeaderboardLocalizationCreateRequestDataAttributes)

	if err != nil {
		return err
	}

	*o = GameCenterLeaderboardLocalizationCreateRequestDataAttributes(varGameCenterLeaderboardLocalizationCreateRequestDataAttributes)

	return err
}

type NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes struct {
	value *GameCenterLeaderboardLocalizationCreateRequestDataAttributes
	isSet bool
}

func (v NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) Get() *GameCenterLeaderboardLocalizationCreateRequestDataAttributes {
	return v.value
}

func (v *NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) Set(val *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes(val *GameCenterLeaderboardLocalizationCreateRequestDataAttributes) *NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes {
	return &NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardLocalizationCreateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


