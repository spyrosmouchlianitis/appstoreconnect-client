/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the CiBuildActionRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CiBuildActionRelationships{}

// CiBuildActionRelationships struct for CiBuildActionRelationships
type CiBuildActionRelationships struct {
	BuildRun *CiBuildActionRelationshipsBuildRun `json:"buildRun,omitempty"`
	Artifacts *AnalyticsReportInstanceRelationshipsSegments `json:"artifacts,omitempty"`
	Issues *AnalyticsReportInstanceRelationshipsSegments `json:"issues,omitempty"`
	TestResults *AnalyticsReportInstanceRelationshipsSegments `json:"testResults,omitempty"`
}

// NewCiBuildActionRelationships instantiates a new CiBuildActionRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiBuildActionRelationships() *CiBuildActionRelationships {
	this := CiBuildActionRelationships{}
	return &this
}

// NewCiBuildActionRelationshipsWithDefaults instantiates a new CiBuildActionRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiBuildActionRelationshipsWithDefaults() *CiBuildActionRelationships {
	this := CiBuildActionRelationships{}
	return &this
}

// GetBuildRun returns the BuildRun field value if set, zero value otherwise.
func (o *CiBuildActionRelationships) GetBuildRun() CiBuildActionRelationshipsBuildRun {
	if o == nil || IsNil(o.BuildRun) {
		var ret CiBuildActionRelationshipsBuildRun
		return ret
	}
	return *o.BuildRun
}

// GetBuildRunOk returns a tuple with the BuildRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiBuildActionRelationships) GetBuildRunOk() (*CiBuildActionRelationshipsBuildRun, bool) {
	if o == nil || IsNil(o.BuildRun) {
		return nil, false
	}
	return o.BuildRun, true
}

// HasBuildRun returns a boolean if a field has been set.
func (o *CiBuildActionRelationships) HasBuildRun() bool {
	if o != nil && !IsNil(o.BuildRun) {
		return true
	}

	return false
}

// SetBuildRun gets a reference to the given CiBuildActionRelationshipsBuildRun and assigns it to the BuildRun field.
func (o *CiBuildActionRelationships) SetBuildRun(v CiBuildActionRelationshipsBuildRun) {
	o.BuildRun = &v
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *CiBuildActionRelationships) GetArtifacts() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.Artifacts) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiBuildActionRelationships) GetArtifactsOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.Artifacts) {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *CiBuildActionRelationships) HasArtifacts() bool {
	if o != nil && !IsNil(o.Artifacts) {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the Artifacts field.
func (o *CiBuildActionRelationships) SetArtifacts(v AnalyticsReportInstanceRelationshipsSegments) {
	o.Artifacts = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *CiBuildActionRelationships) GetIssues() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.Issues) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiBuildActionRelationships) GetIssuesOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *CiBuildActionRelationships) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the Issues field.
func (o *CiBuildActionRelationships) SetIssues(v AnalyticsReportInstanceRelationshipsSegments) {
	o.Issues = &v
}

// GetTestResults returns the TestResults field value if set, zero value otherwise.
func (o *CiBuildActionRelationships) GetTestResults() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.TestResults) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiBuildActionRelationships) GetTestResultsOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *CiBuildActionRelationships) HasTestResults() bool {
	if o != nil && !IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the TestResults field.
func (o *CiBuildActionRelationships) SetTestResults(v AnalyticsReportInstanceRelationshipsSegments) {
	o.TestResults = &v
}

func (o CiBuildActionRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CiBuildActionRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildRun) {
		toSerialize["buildRun"] = o.BuildRun
	}
	if !IsNil(o.Artifacts) {
		toSerialize["artifacts"] = o.Artifacts
	}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.TestResults) {
		toSerialize["testResults"] = o.TestResults
	}
	return toSerialize, nil
}

type NullableCiBuildActionRelationships struct {
	value *CiBuildActionRelationships
	isSet bool
}

func (v NullableCiBuildActionRelationships) Get() *CiBuildActionRelationships {
	return v.value
}

func (v *NullableCiBuildActionRelationships) Set(val *CiBuildActionRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCiBuildActionRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCiBuildActionRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiBuildActionRelationships(val *CiBuildActionRelationships) *NullableCiBuildActionRelationships {
	return &NullableCiBuildActionRelationships{value: val, isSet: true}
}

func (v NullableCiBuildActionRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiBuildActionRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


