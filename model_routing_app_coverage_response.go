/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutingAppCoverageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingAppCoverageResponse{}

// RoutingAppCoverageResponse struct for RoutingAppCoverageResponse
type RoutingAppCoverageResponse struct {
	Data RoutingAppCoverage `json:"data"`
	Included []AppStoreVersion `json:"included,omitempty"`
	Links DocumentLinks `json:"links"`
}

type _RoutingAppCoverageResponse RoutingAppCoverageResponse

// NewRoutingAppCoverageResponse instantiates a new RoutingAppCoverageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingAppCoverageResponse(data RoutingAppCoverage, links DocumentLinks) *RoutingAppCoverageResponse {
	this := RoutingAppCoverageResponse{}
	this.Data = data
	this.Links = links
	return &this
}

// NewRoutingAppCoverageResponseWithDefaults instantiates a new RoutingAppCoverageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingAppCoverageResponseWithDefaults() *RoutingAppCoverageResponse {
	this := RoutingAppCoverageResponse{}
	return &this
}

// GetData returns the Data field value
func (o *RoutingAppCoverageResponse) GetData() RoutingAppCoverage {
	if o == nil {
		var ret RoutingAppCoverage
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RoutingAppCoverageResponse) GetDataOk() (*RoutingAppCoverage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *RoutingAppCoverageResponse) SetData(v RoutingAppCoverage) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *RoutingAppCoverageResponse) GetIncluded() []AppStoreVersion {
	if o == nil || IsNil(o.Included) {
		var ret []AppStoreVersion
		return ret
	}
	return o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingAppCoverageResponse) GetIncludedOk() ([]AppStoreVersion, bool) {
	if o == nil || IsNil(o.Included) {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *RoutingAppCoverageResponse) HasIncluded() bool {
	if o != nil && !IsNil(o.Included) {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []AppStoreVersion and assigns it to the Included field.
func (o *RoutingAppCoverageResponse) SetIncluded(v []AppStoreVersion) {
	o.Included = v
}

// GetLinks returns the Links field value
func (o *RoutingAppCoverageResponse) GetLinks() DocumentLinks {
	if o == nil {
		var ret DocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *RoutingAppCoverageResponse) GetLinksOk() (*DocumentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *RoutingAppCoverageResponse) SetLinks(v DocumentLinks) {
	o.Links = v
}

func (o RoutingAppCoverageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingAppCoverageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Included) {
		toSerialize["included"] = o.Included
	}
	toSerialize["links"] = o.Links
	return toSerialize, nil
}

func (o *RoutingAppCoverageResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutingAppCoverageResponse := _RoutingAppCoverageResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutingAppCoverageResponse)

	if err != nil {
		return err
	}

	*o = RoutingAppCoverageResponse(varRoutingAppCoverageResponse)

	return err
}

type NullableRoutingAppCoverageResponse struct {
	value *RoutingAppCoverageResponse
	isSet bool
}

func (v NullableRoutingAppCoverageResponse) Get() *RoutingAppCoverageResponse {
	return v.value
}

func (v *NullableRoutingAppCoverageResponse) Set(val *RoutingAppCoverageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingAppCoverageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingAppCoverageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingAppCoverageResponse(val *RoutingAppCoverageResponse) *NullableRoutingAppCoverageResponse {
	return &NullableRoutingAppCoverageResponse{value: val, isSet: true}
}

func (v NullableRoutingAppCoverageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingAppCoverageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


