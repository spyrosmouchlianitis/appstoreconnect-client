/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the GameCenterLeaderboardSetAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardSetAttributes{}

// GameCenterLeaderboardSetAttributes struct for GameCenterLeaderboardSetAttributes
type GameCenterLeaderboardSetAttributes struct {
	ReferenceName *string `json:"referenceName,omitempty"`
	VendorIdentifier *string `json:"vendorIdentifier,omitempty"`
}

// NewGameCenterLeaderboardSetAttributes instantiates a new GameCenterLeaderboardSetAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardSetAttributes() *GameCenterLeaderboardSetAttributes {
	this := GameCenterLeaderboardSetAttributes{}
	return &this
}

// NewGameCenterLeaderboardSetAttributesWithDefaults instantiates a new GameCenterLeaderboardSetAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardSetAttributesWithDefaults() *GameCenterLeaderboardSetAttributes {
	this := GameCenterLeaderboardSetAttributes{}
	return &this
}

// GetReferenceName returns the ReferenceName field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetAttributes) GetReferenceName() string {
	if o == nil || IsNil(o.ReferenceName) {
		var ret string
		return ret
	}
	return *o.ReferenceName
}

// GetReferenceNameOk returns a tuple with the ReferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetAttributes) GetReferenceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceName) {
		return nil, false
	}
	return o.ReferenceName, true
}

// HasReferenceName returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetAttributes) HasReferenceName() bool {
	if o != nil && !IsNil(o.ReferenceName) {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given string and assigns it to the ReferenceName field.
func (o *GameCenterLeaderboardSetAttributes) SetReferenceName(v string) {
	o.ReferenceName = &v
}

// GetVendorIdentifier returns the VendorIdentifier field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetAttributes) GetVendorIdentifier() string {
	if o == nil || IsNil(o.VendorIdentifier) {
		var ret string
		return ret
	}
	return *o.VendorIdentifier
}

// GetVendorIdentifierOk returns a tuple with the VendorIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetAttributes) GetVendorIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.VendorIdentifier) {
		return nil, false
	}
	return o.VendorIdentifier, true
}

// HasVendorIdentifier returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetAttributes) HasVendorIdentifier() bool {
	if o != nil && !IsNil(o.VendorIdentifier) {
		return true
	}

	return false
}

// SetVendorIdentifier gets a reference to the given string and assigns it to the VendorIdentifier field.
func (o *GameCenterLeaderboardSetAttributes) SetVendorIdentifier(v string) {
	o.VendorIdentifier = &v
}

func (o GameCenterLeaderboardSetAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardSetAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReferenceName) {
		toSerialize["referenceName"] = o.ReferenceName
	}
	if !IsNil(o.VendorIdentifier) {
		toSerialize["vendorIdentifier"] = o.VendorIdentifier
	}
	return toSerialize, nil
}

type NullableGameCenterLeaderboardSetAttributes struct {
	value *GameCenterLeaderboardSetAttributes
	isSet bool
}

func (v NullableGameCenterLeaderboardSetAttributes) Get() *GameCenterLeaderboardSetAttributes {
	return v.value
}

func (v *NullableGameCenterLeaderboardSetAttributes) Set(val *GameCenterLeaderboardSetAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardSetAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardSetAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardSetAttributes(val *GameCenterLeaderboardSetAttributes) *NullableGameCenterLeaderboardSetAttributes {
	return &NullableGameCenterLeaderboardSetAttributes{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardSetAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardSetAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


