/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the GameCenterMatchmakingTestRequestInlineCreateRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterMatchmakingTestRequestInlineCreateRelationships{}

// GameCenterMatchmakingTestRequestInlineCreateRelationships struct for GameCenterMatchmakingTestRequestInlineCreateRelationships
type GameCenterMatchmakingTestRequestInlineCreateRelationships struct {
	MatchmakingPlayerProperties *GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties `json:"matchmakingPlayerProperties,omitempty"`
}

// NewGameCenterMatchmakingTestRequestInlineCreateRelationships instantiates a new GameCenterMatchmakingTestRequestInlineCreateRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterMatchmakingTestRequestInlineCreateRelationships() *GameCenterMatchmakingTestRequestInlineCreateRelationships {
	this := GameCenterMatchmakingTestRequestInlineCreateRelationships{}
	return &this
}

// NewGameCenterMatchmakingTestRequestInlineCreateRelationshipsWithDefaults instantiates a new GameCenterMatchmakingTestRequestInlineCreateRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterMatchmakingTestRequestInlineCreateRelationshipsWithDefaults() *GameCenterMatchmakingTestRequestInlineCreateRelationships {
	this := GameCenterMatchmakingTestRequestInlineCreateRelationships{}
	return &this
}

// GetMatchmakingPlayerProperties returns the MatchmakingPlayerProperties field value if set, zero value otherwise.
func (o *GameCenterMatchmakingTestRequestInlineCreateRelationships) GetMatchmakingPlayerProperties() GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties {
	if o == nil || IsNil(o.MatchmakingPlayerProperties) {
		var ret GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties
		return ret
	}
	return *o.MatchmakingPlayerProperties
}

// GetMatchmakingPlayerPropertiesOk returns a tuple with the MatchmakingPlayerProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingTestRequestInlineCreateRelationships) GetMatchmakingPlayerPropertiesOk() (*GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties, bool) {
	if o == nil || IsNil(o.MatchmakingPlayerProperties) {
		return nil, false
	}
	return o.MatchmakingPlayerProperties, true
}

// HasMatchmakingPlayerProperties returns a boolean if a field has been set.
func (o *GameCenterMatchmakingTestRequestInlineCreateRelationships) HasMatchmakingPlayerProperties() bool {
	if o != nil && !IsNil(o.MatchmakingPlayerProperties) {
		return true
	}

	return false
}

// SetMatchmakingPlayerProperties gets a reference to the given GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties and assigns it to the MatchmakingPlayerProperties field.
func (o *GameCenterMatchmakingTestRequestInlineCreateRelationships) SetMatchmakingPlayerProperties(v GameCenterMatchmakingTestRequestInlineCreateRelationshipsMatchmakingPlayerProperties) {
	o.MatchmakingPlayerProperties = &v
}

func (o GameCenterMatchmakingTestRequestInlineCreateRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterMatchmakingTestRequestInlineCreateRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchmakingPlayerProperties) {
		toSerialize["matchmakingPlayerProperties"] = o.MatchmakingPlayerProperties
	}
	return toSerialize, nil
}

type NullableGameCenterMatchmakingTestRequestInlineCreateRelationships struct {
	value *GameCenterMatchmakingTestRequestInlineCreateRelationships
	isSet bool
}

func (v NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) Get() *GameCenterMatchmakingTestRequestInlineCreateRelationships {
	return v.value
}

func (v *NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) Set(val *GameCenterMatchmakingTestRequestInlineCreateRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterMatchmakingTestRequestInlineCreateRelationships(val *GameCenterMatchmakingTestRequestInlineCreateRelationships) *NullableGameCenterMatchmakingTestRequestInlineCreateRelationships {
	return &NullableGameCenterMatchmakingTestRequestInlineCreateRelationships{value: val, isSet: true}
}

func (v NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterMatchmakingTestRequestInlineCreateRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


