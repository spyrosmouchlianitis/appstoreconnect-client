/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the AppStoreVersionExperimentV2Relationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionExperimentV2Relationships{}

// AppStoreVersionExperimentV2Relationships struct for AppStoreVersionExperimentV2Relationships
type AppStoreVersionExperimentV2Relationships struct {
	App *AlternativeDistributionKeyCreateRequestDataRelationshipsApp `json:"app,omitempty"`
	LatestControlVersion *AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion `json:"latestControlVersion,omitempty"`
	ControlVersions *AppStoreVersionExperimentV2RelationshipsControlVersions `json:"controlVersions,omitempty"`
	AppStoreVersionExperimentTreatments *AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments `json:"appStoreVersionExperimentTreatments,omitempty"`
}

// NewAppStoreVersionExperimentV2Relationships instantiates a new AppStoreVersionExperimentV2Relationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionExperimentV2Relationships() *AppStoreVersionExperimentV2Relationships {
	this := AppStoreVersionExperimentV2Relationships{}
	return &this
}

// NewAppStoreVersionExperimentV2RelationshipsWithDefaults instantiates a new AppStoreVersionExperimentV2Relationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionExperimentV2RelationshipsWithDefaults() *AppStoreVersionExperimentV2Relationships {
	this := AppStoreVersionExperimentV2Relationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentV2Relationships) GetApp() AlternativeDistributionKeyCreateRequestDataRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret AlternativeDistributionKeyCreateRequestDataRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentV2Relationships) GetAppOk() (*AlternativeDistributionKeyCreateRequestDataRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentV2Relationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AlternativeDistributionKeyCreateRequestDataRelationshipsApp and assigns it to the App field.
func (o *AppStoreVersionExperimentV2Relationships) SetApp(v AlternativeDistributionKeyCreateRequestDataRelationshipsApp) {
	o.App = &v
}

// GetLatestControlVersion returns the LatestControlVersion field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentV2Relationships) GetLatestControlVersion() AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion {
	if o == nil || IsNil(o.LatestControlVersion) {
		var ret AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion
		return ret
	}
	return *o.LatestControlVersion
}

// GetLatestControlVersionOk returns a tuple with the LatestControlVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentV2Relationships) GetLatestControlVersionOk() (*AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion, bool) {
	if o == nil || IsNil(o.LatestControlVersion) {
		return nil, false
	}
	return o.LatestControlVersion, true
}

// HasLatestControlVersion returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentV2Relationships) HasLatestControlVersion() bool {
	if o != nil && !IsNil(o.LatestControlVersion) {
		return true
	}

	return false
}

// SetLatestControlVersion gets a reference to the given AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion and assigns it to the LatestControlVersion field.
func (o *AppStoreVersionExperimentV2Relationships) SetLatestControlVersion(v AppClipDefaultExperienceCreateRequestDataRelationshipsReleaseWithAppStoreVersion) {
	o.LatestControlVersion = &v
}

// GetControlVersions returns the ControlVersions field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentV2Relationships) GetControlVersions() AppStoreVersionExperimentV2RelationshipsControlVersions {
	if o == nil || IsNil(o.ControlVersions) {
		var ret AppStoreVersionExperimentV2RelationshipsControlVersions
		return ret
	}
	return *o.ControlVersions
}

// GetControlVersionsOk returns a tuple with the ControlVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentV2Relationships) GetControlVersionsOk() (*AppStoreVersionExperimentV2RelationshipsControlVersions, bool) {
	if o == nil || IsNil(o.ControlVersions) {
		return nil, false
	}
	return o.ControlVersions, true
}

// HasControlVersions returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentV2Relationships) HasControlVersions() bool {
	if o != nil && !IsNil(o.ControlVersions) {
		return true
	}

	return false
}

// SetControlVersions gets a reference to the given AppStoreVersionExperimentV2RelationshipsControlVersions and assigns it to the ControlVersions field.
func (o *AppStoreVersionExperimentV2Relationships) SetControlVersions(v AppStoreVersionExperimentV2RelationshipsControlVersions) {
	o.ControlVersions = &v
}

// GetAppStoreVersionExperimentTreatments returns the AppStoreVersionExperimentTreatments field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentV2Relationships) GetAppStoreVersionExperimentTreatments() AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments {
	if o == nil || IsNil(o.AppStoreVersionExperimentTreatments) {
		var ret AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments
		return ret
	}
	return *o.AppStoreVersionExperimentTreatments
}

// GetAppStoreVersionExperimentTreatmentsOk returns a tuple with the AppStoreVersionExperimentTreatments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentV2Relationships) GetAppStoreVersionExperimentTreatmentsOk() (*AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments, bool) {
	if o == nil || IsNil(o.AppStoreVersionExperimentTreatments) {
		return nil, false
	}
	return o.AppStoreVersionExperimentTreatments, true
}

// HasAppStoreVersionExperimentTreatments returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentV2Relationships) HasAppStoreVersionExperimentTreatments() bool {
	if o != nil && !IsNil(o.AppStoreVersionExperimentTreatments) {
		return true
	}

	return false
}

// SetAppStoreVersionExperimentTreatments gets a reference to the given AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments and assigns it to the AppStoreVersionExperimentTreatments field.
func (o *AppStoreVersionExperimentV2Relationships) SetAppStoreVersionExperimentTreatments(v AppStoreVersionExperimentV2RelationshipsAppStoreVersionExperimentTreatments) {
	o.AppStoreVersionExperimentTreatments = &v
}

func (o AppStoreVersionExperimentV2Relationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionExperimentV2Relationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.LatestControlVersion) {
		toSerialize["latestControlVersion"] = o.LatestControlVersion
	}
	if !IsNil(o.ControlVersions) {
		toSerialize["controlVersions"] = o.ControlVersions
	}
	if !IsNil(o.AppStoreVersionExperimentTreatments) {
		toSerialize["appStoreVersionExperimentTreatments"] = o.AppStoreVersionExperimentTreatments
	}
	return toSerialize, nil
}

type NullableAppStoreVersionExperimentV2Relationships struct {
	value *AppStoreVersionExperimentV2Relationships
	isSet bool
}

func (v NullableAppStoreVersionExperimentV2Relationships) Get() *AppStoreVersionExperimentV2Relationships {
	return v.value
}

func (v *NullableAppStoreVersionExperimentV2Relationships) Set(val *AppStoreVersionExperimentV2Relationships) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionExperimentV2Relationships) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionExperimentV2Relationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionExperimentV2Relationships(val *AppStoreVersionExperimentV2Relationships) *NullableAppStoreVersionExperimentV2Relationships {
	return &NullableAppStoreVersionExperimentV2Relationships{value: val, isSet: true}
}

func (v NullableAppStoreVersionExperimentV2Relationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionExperimentV2Relationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


