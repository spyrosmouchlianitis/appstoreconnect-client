/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the AnalyticsReportInstanceAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsReportInstanceAttributes{}

// AnalyticsReportInstanceAttributes struct for AnalyticsReportInstanceAttributes
type AnalyticsReportInstanceAttributes struct {
	Granularity *string `json:"granularity,omitempty"`
	ProcessingDate *string `json:"processingDate,omitempty"`
}

// NewAnalyticsReportInstanceAttributes instantiates a new AnalyticsReportInstanceAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsReportInstanceAttributes() *AnalyticsReportInstanceAttributes {
	this := AnalyticsReportInstanceAttributes{}
	return &this
}

// NewAnalyticsReportInstanceAttributesWithDefaults instantiates a new AnalyticsReportInstanceAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsReportInstanceAttributesWithDefaults() *AnalyticsReportInstanceAttributes {
	this := AnalyticsReportInstanceAttributes{}
	return &this
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *AnalyticsReportInstanceAttributes) GetGranularity() string {
	if o == nil || IsNil(o.Granularity) {
		var ret string
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsReportInstanceAttributes) GetGranularityOk() (*string, bool) {
	if o == nil || IsNil(o.Granularity) {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *AnalyticsReportInstanceAttributes) HasGranularity() bool {
	if o != nil && !IsNil(o.Granularity) {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given string and assigns it to the Granularity field.
func (o *AnalyticsReportInstanceAttributes) SetGranularity(v string) {
	o.Granularity = &v
}

// GetProcessingDate returns the ProcessingDate field value if set, zero value otherwise.
func (o *AnalyticsReportInstanceAttributes) GetProcessingDate() string {
	if o == nil || IsNil(o.ProcessingDate) {
		var ret string
		return ret
	}
	return *o.ProcessingDate
}

// GetProcessingDateOk returns a tuple with the ProcessingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsReportInstanceAttributes) GetProcessingDateOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessingDate) {
		return nil, false
	}
	return o.ProcessingDate, true
}

// HasProcessingDate returns a boolean if a field has been set.
func (o *AnalyticsReportInstanceAttributes) HasProcessingDate() bool {
	if o != nil && !IsNil(o.ProcessingDate) {
		return true
	}

	return false
}

// SetProcessingDate gets a reference to the given string and assigns it to the ProcessingDate field.
func (o *AnalyticsReportInstanceAttributes) SetProcessingDate(v string) {
	o.ProcessingDate = &v
}

func (o AnalyticsReportInstanceAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsReportInstanceAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Granularity) {
		toSerialize["granularity"] = o.Granularity
	}
	if !IsNil(o.ProcessingDate) {
		toSerialize["processingDate"] = o.ProcessingDate
	}
	return toSerialize, nil
}

type NullableAnalyticsReportInstanceAttributes struct {
	value *AnalyticsReportInstanceAttributes
	isSet bool
}

func (v NullableAnalyticsReportInstanceAttributes) Get() *AnalyticsReportInstanceAttributes {
	return v.value
}

func (v *NullableAnalyticsReportInstanceAttributes) Set(val *AnalyticsReportInstanceAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsReportInstanceAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsReportInstanceAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsReportInstanceAttributes(val *AnalyticsReportInstanceAttributes) *NullableAnalyticsReportInstanceAttributes {
	return &NullableAnalyticsReportInstanceAttributes{value: val, isSet: true}
}

func (v NullableAnalyticsReportInstanceAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsReportInstanceAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


