/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the InAppPurchaseImageAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InAppPurchaseImageAttributes{}

// InAppPurchaseImageAttributes struct for InAppPurchaseImageAttributes
type InAppPurchaseImageAttributes struct {
	FileSize *int32 `json:"fileSize,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	SourceFileChecksum *string `json:"sourceFileChecksum,omitempty"`
	AssetToken *string `json:"assetToken,omitempty"`
	ImageAsset *ImageAsset `json:"imageAsset,omitempty"`
	UploadOperations []UploadOperation `json:"uploadOperations,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewInAppPurchaseImageAttributes instantiates a new InAppPurchaseImageAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInAppPurchaseImageAttributes() *InAppPurchaseImageAttributes {
	this := InAppPurchaseImageAttributes{}
	return &this
}

// NewInAppPurchaseImageAttributesWithDefaults instantiates a new InAppPurchaseImageAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInAppPurchaseImageAttributesWithDefaults() *InAppPurchaseImageAttributes {
	this := InAppPurchaseImageAttributes{}
	return &this
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *InAppPurchaseImageAttributes) SetFileSize(v int32) {
	o.FileSize = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *InAppPurchaseImageAttributes) SetFileName(v string) {
	o.FileName = &v
}

// GetSourceFileChecksum returns the SourceFileChecksum field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetSourceFileChecksum() string {
	if o == nil || IsNil(o.SourceFileChecksum) {
		var ret string
		return ret
	}
	return *o.SourceFileChecksum
}

// GetSourceFileChecksumOk returns a tuple with the SourceFileChecksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetSourceFileChecksumOk() (*string, bool) {
	if o == nil || IsNil(o.SourceFileChecksum) {
		return nil, false
	}
	return o.SourceFileChecksum, true
}

// HasSourceFileChecksum returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasSourceFileChecksum() bool {
	if o != nil && !IsNil(o.SourceFileChecksum) {
		return true
	}

	return false
}

// SetSourceFileChecksum gets a reference to the given string and assigns it to the SourceFileChecksum field.
func (o *InAppPurchaseImageAttributes) SetSourceFileChecksum(v string) {
	o.SourceFileChecksum = &v
}

// GetAssetToken returns the AssetToken field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetAssetToken() string {
	if o == nil || IsNil(o.AssetToken) {
		var ret string
		return ret
	}
	return *o.AssetToken
}

// GetAssetTokenOk returns a tuple with the AssetToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetAssetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AssetToken) {
		return nil, false
	}
	return o.AssetToken, true
}

// HasAssetToken returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasAssetToken() bool {
	if o != nil && !IsNil(o.AssetToken) {
		return true
	}

	return false
}

// SetAssetToken gets a reference to the given string and assigns it to the AssetToken field.
func (o *InAppPurchaseImageAttributes) SetAssetToken(v string) {
	o.AssetToken = &v
}

// GetImageAsset returns the ImageAsset field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetImageAsset() ImageAsset {
	if o == nil || IsNil(o.ImageAsset) {
		var ret ImageAsset
		return ret
	}
	return *o.ImageAsset
}

// GetImageAssetOk returns a tuple with the ImageAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetImageAssetOk() (*ImageAsset, bool) {
	if o == nil || IsNil(o.ImageAsset) {
		return nil, false
	}
	return o.ImageAsset, true
}

// HasImageAsset returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasImageAsset() bool {
	if o != nil && !IsNil(o.ImageAsset) {
		return true
	}

	return false
}

// SetImageAsset gets a reference to the given ImageAsset and assigns it to the ImageAsset field.
func (o *InAppPurchaseImageAttributes) SetImageAsset(v ImageAsset) {
	o.ImageAsset = &v
}

// GetUploadOperations returns the UploadOperations field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetUploadOperations() []UploadOperation {
	if o == nil || IsNil(o.UploadOperations) {
		var ret []UploadOperation
		return ret
	}
	return o.UploadOperations
}

// GetUploadOperationsOk returns a tuple with the UploadOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetUploadOperationsOk() ([]UploadOperation, bool) {
	if o == nil || IsNil(o.UploadOperations) {
		return nil, false
	}
	return o.UploadOperations, true
}

// HasUploadOperations returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasUploadOperations() bool {
	if o != nil && !IsNil(o.UploadOperations) {
		return true
	}

	return false
}

// SetUploadOperations gets a reference to the given []UploadOperation and assigns it to the UploadOperations field.
func (o *InAppPurchaseImageAttributes) SetUploadOperations(v []UploadOperation) {
	o.UploadOperations = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InAppPurchaseImageAttributes) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InAppPurchaseImageAttributes) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InAppPurchaseImageAttributes) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InAppPurchaseImageAttributes) SetState(v string) {
	o.State = &v
}

func (o InAppPurchaseImageAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InAppPurchaseImageAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.SourceFileChecksum) {
		toSerialize["sourceFileChecksum"] = o.SourceFileChecksum
	}
	if !IsNil(o.AssetToken) {
		toSerialize["assetToken"] = o.AssetToken
	}
	if !IsNil(o.ImageAsset) {
		toSerialize["imageAsset"] = o.ImageAsset
	}
	if !IsNil(o.UploadOperations) {
		toSerialize["uploadOperations"] = o.UploadOperations
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableInAppPurchaseImageAttributes struct {
	value *InAppPurchaseImageAttributes
	isSet bool
}

func (v NullableInAppPurchaseImageAttributes) Get() *InAppPurchaseImageAttributes {
	return v.value
}

func (v *NullableInAppPurchaseImageAttributes) Set(val *InAppPurchaseImageAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInAppPurchaseImageAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInAppPurchaseImageAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInAppPurchaseImageAttributes(val *InAppPurchaseImageAttributes) *NullableInAppPurchaseImageAttributes {
	return &NullableInAppPurchaseImageAttributes{value: val, isSet: true}
}

func (v NullableInAppPurchaseImageAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInAppPurchaseImageAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


