/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the CiProductRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CiProductRelationships{}

// CiProductRelationships struct for CiProductRelationships
type CiProductRelationships struct {
	App *BetaAppLocalizationRelationshipsApp `json:"app,omitempty"`
	BundleId *CiProductRelationshipsBundleId `json:"bundleId,omitempty"`
	Workflows *AnalyticsReportInstanceRelationshipsSegments `json:"workflows,omitempty"`
	PrimaryRepositories *CiProductRelationshipsPrimaryRepositories `json:"primaryRepositories,omitempty"`
	AdditionalRepositories *AnalyticsReportInstanceRelationshipsSegments `json:"additionalRepositories,omitempty"`
	BuildRuns *AnalyticsReportInstanceRelationshipsSegments `json:"buildRuns,omitempty"`
}

// NewCiProductRelationships instantiates a new CiProductRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiProductRelationships() *CiProductRelationships {
	this := CiProductRelationships{}
	return &this
}

// NewCiProductRelationshipsWithDefaults instantiates a new CiProductRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiProductRelationshipsWithDefaults() *CiProductRelationships {
	this := CiProductRelationships{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *CiProductRelationships) GetApp() BetaAppLocalizationRelationshipsApp {
	if o == nil || IsNil(o.App) {
		var ret BetaAppLocalizationRelationshipsApp
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetAppOk() (*BetaAppLocalizationRelationshipsApp, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *CiProductRelationships) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given BetaAppLocalizationRelationshipsApp and assigns it to the App field.
func (o *CiProductRelationships) SetApp(v BetaAppLocalizationRelationshipsApp) {
	o.App = &v
}

// GetBundleId returns the BundleId field value if set, zero value otherwise.
func (o *CiProductRelationships) GetBundleId() CiProductRelationshipsBundleId {
	if o == nil || IsNil(o.BundleId) {
		var ret CiProductRelationshipsBundleId
		return ret
	}
	return *o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetBundleIdOk() (*CiProductRelationshipsBundleId, bool) {
	if o == nil || IsNil(o.BundleId) {
		return nil, false
	}
	return o.BundleId, true
}

// HasBundleId returns a boolean if a field has been set.
func (o *CiProductRelationships) HasBundleId() bool {
	if o != nil && !IsNil(o.BundleId) {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given CiProductRelationshipsBundleId and assigns it to the BundleId field.
func (o *CiProductRelationships) SetBundleId(v CiProductRelationshipsBundleId) {
	o.BundleId = &v
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *CiProductRelationships) GetWorkflows() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.Workflows) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetWorkflowsOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.Workflows) {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *CiProductRelationships) HasWorkflows() bool {
	if o != nil && !IsNil(o.Workflows) {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the Workflows field.
func (o *CiProductRelationships) SetWorkflows(v AnalyticsReportInstanceRelationshipsSegments) {
	o.Workflows = &v
}

// GetPrimaryRepositories returns the PrimaryRepositories field value if set, zero value otherwise.
func (o *CiProductRelationships) GetPrimaryRepositories() CiProductRelationshipsPrimaryRepositories {
	if o == nil || IsNil(o.PrimaryRepositories) {
		var ret CiProductRelationshipsPrimaryRepositories
		return ret
	}
	return *o.PrimaryRepositories
}

// GetPrimaryRepositoriesOk returns a tuple with the PrimaryRepositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetPrimaryRepositoriesOk() (*CiProductRelationshipsPrimaryRepositories, bool) {
	if o == nil || IsNil(o.PrimaryRepositories) {
		return nil, false
	}
	return o.PrimaryRepositories, true
}

// HasPrimaryRepositories returns a boolean if a field has been set.
func (o *CiProductRelationships) HasPrimaryRepositories() bool {
	if o != nil && !IsNil(o.PrimaryRepositories) {
		return true
	}

	return false
}

// SetPrimaryRepositories gets a reference to the given CiProductRelationshipsPrimaryRepositories and assigns it to the PrimaryRepositories field.
func (o *CiProductRelationships) SetPrimaryRepositories(v CiProductRelationshipsPrimaryRepositories) {
	o.PrimaryRepositories = &v
}

// GetAdditionalRepositories returns the AdditionalRepositories field value if set, zero value otherwise.
func (o *CiProductRelationships) GetAdditionalRepositories() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.AdditionalRepositories) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.AdditionalRepositories
}

// GetAdditionalRepositoriesOk returns a tuple with the AdditionalRepositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetAdditionalRepositoriesOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.AdditionalRepositories) {
		return nil, false
	}
	return o.AdditionalRepositories, true
}

// HasAdditionalRepositories returns a boolean if a field has been set.
func (o *CiProductRelationships) HasAdditionalRepositories() bool {
	if o != nil && !IsNil(o.AdditionalRepositories) {
		return true
	}

	return false
}

// SetAdditionalRepositories gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the AdditionalRepositories field.
func (o *CiProductRelationships) SetAdditionalRepositories(v AnalyticsReportInstanceRelationshipsSegments) {
	o.AdditionalRepositories = &v
}

// GetBuildRuns returns the BuildRuns field value if set, zero value otherwise.
func (o *CiProductRelationships) GetBuildRuns() AnalyticsReportInstanceRelationshipsSegments {
	if o == nil || IsNil(o.BuildRuns) {
		var ret AnalyticsReportInstanceRelationshipsSegments
		return ret
	}
	return *o.BuildRuns
}

// GetBuildRunsOk returns a tuple with the BuildRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiProductRelationships) GetBuildRunsOk() (*AnalyticsReportInstanceRelationshipsSegments, bool) {
	if o == nil || IsNil(o.BuildRuns) {
		return nil, false
	}
	return o.BuildRuns, true
}

// HasBuildRuns returns a boolean if a field has been set.
func (o *CiProductRelationships) HasBuildRuns() bool {
	if o != nil && !IsNil(o.BuildRuns) {
		return true
	}

	return false
}

// SetBuildRuns gets a reference to the given AnalyticsReportInstanceRelationshipsSegments and assigns it to the BuildRuns field.
func (o *CiProductRelationships) SetBuildRuns(v AnalyticsReportInstanceRelationshipsSegments) {
	o.BuildRuns = &v
}

func (o CiProductRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CiProductRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.BundleId) {
		toSerialize["bundleId"] = o.BundleId
	}
	if !IsNil(o.Workflows) {
		toSerialize["workflows"] = o.Workflows
	}
	if !IsNil(o.PrimaryRepositories) {
		toSerialize["primaryRepositories"] = o.PrimaryRepositories
	}
	if !IsNil(o.AdditionalRepositories) {
		toSerialize["additionalRepositories"] = o.AdditionalRepositories
	}
	if !IsNil(o.BuildRuns) {
		toSerialize["buildRuns"] = o.BuildRuns
	}
	return toSerialize, nil
}

type NullableCiProductRelationships struct {
	value *CiProductRelationships
	isSet bool
}

func (v NullableCiProductRelationships) Get() *CiProductRelationships {
	return v.value
}

func (v *NullableCiProductRelationships) Set(val *CiProductRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableCiProductRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableCiProductRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiProductRelationships(val *CiProductRelationships) *NullableCiProductRelationships {
	return &NullableCiProductRelationships{value: val, isSet: true}
}

func (v NullableCiProductRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiProductRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


