/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the CiManualPullRequestStartCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CiManualPullRequestStartCondition{}

// CiManualPullRequestStartCondition struct for CiManualPullRequestStartCondition
type CiManualPullRequestStartCondition struct {
	Source *CiBranchPatterns `json:"source,omitempty"`
	Destination *CiBranchPatterns `json:"destination,omitempty"`
}

// NewCiManualPullRequestStartCondition instantiates a new CiManualPullRequestStartCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCiManualPullRequestStartCondition() *CiManualPullRequestStartCondition {
	this := CiManualPullRequestStartCondition{}
	return &this
}

// NewCiManualPullRequestStartConditionWithDefaults instantiates a new CiManualPullRequestStartCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCiManualPullRequestStartConditionWithDefaults() *CiManualPullRequestStartCondition {
	this := CiManualPullRequestStartCondition{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *CiManualPullRequestStartCondition) GetSource() CiBranchPatterns {
	if o == nil || IsNil(o.Source) {
		var ret CiBranchPatterns
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiManualPullRequestStartCondition) GetSourceOk() (*CiBranchPatterns, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *CiManualPullRequestStartCondition) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given CiBranchPatterns and assigns it to the Source field.
func (o *CiManualPullRequestStartCondition) SetSource(v CiBranchPatterns) {
	o.Source = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *CiManualPullRequestStartCondition) GetDestination() CiBranchPatterns {
	if o == nil || IsNil(o.Destination) {
		var ret CiBranchPatterns
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CiManualPullRequestStartCondition) GetDestinationOk() (*CiBranchPatterns, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *CiManualPullRequestStartCondition) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given CiBranchPatterns and assigns it to the Destination field.
func (o *CiManualPullRequestStartCondition) SetDestination(v CiBranchPatterns) {
	o.Destination = &v
}

func (o CiManualPullRequestStartCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CiManualPullRequestStartCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	return toSerialize, nil
}

type NullableCiManualPullRequestStartCondition struct {
	value *CiManualPullRequestStartCondition
	isSet bool
}

func (v NullableCiManualPullRequestStartCondition) Get() *CiManualPullRequestStartCondition {
	return v.value
}

func (v *NullableCiManualPullRequestStartCondition) Set(val *CiManualPullRequestStartCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableCiManualPullRequestStartCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableCiManualPullRequestStartCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCiManualPullRequestStartCondition(val *CiManualPullRequestStartCondition) *NullableCiManualPullRequestStartCondition {
	return &NullableCiManualPullRequestStartCondition{value: val, isSet: true}
}

func (v NullableCiManualPullRequestStartCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCiManualPullRequestStartCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


