/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the GameCenterMatchmakingQueueRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterMatchmakingQueueRelationships{}

// GameCenterMatchmakingQueueRelationships struct for GameCenterMatchmakingQueueRelationships
type GameCenterMatchmakingQueueRelationships struct {
	RuleSet *GameCenterMatchmakingQueueRelationshipsRuleSet `json:"ruleSet,omitempty"`
	ExperimentRuleSet *GameCenterMatchmakingQueueRelationshipsRuleSet `json:"experimentRuleSet,omitempty"`
}

// NewGameCenterMatchmakingQueueRelationships instantiates a new GameCenterMatchmakingQueueRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterMatchmakingQueueRelationships() *GameCenterMatchmakingQueueRelationships {
	this := GameCenterMatchmakingQueueRelationships{}
	return &this
}

// NewGameCenterMatchmakingQueueRelationshipsWithDefaults instantiates a new GameCenterMatchmakingQueueRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterMatchmakingQueueRelationshipsWithDefaults() *GameCenterMatchmakingQueueRelationships {
	this := GameCenterMatchmakingQueueRelationships{}
	return &this
}

// GetRuleSet returns the RuleSet field value if set, zero value otherwise.
func (o *GameCenterMatchmakingQueueRelationships) GetRuleSet() GameCenterMatchmakingQueueRelationshipsRuleSet {
	if o == nil || IsNil(o.RuleSet) {
		var ret GameCenterMatchmakingQueueRelationshipsRuleSet
		return ret
	}
	return *o.RuleSet
}

// GetRuleSetOk returns a tuple with the RuleSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingQueueRelationships) GetRuleSetOk() (*GameCenterMatchmakingQueueRelationshipsRuleSet, bool) {
	if o == nil || IsNil(o.RuleSet) {
		return nil, false
	}
	return o.RuleSet, true
}

// HasRuleSet returns a boolean if a field has been set.
func (o *GameCenterMatchmakingQueueRelationships) HasRuleSet() bool {
	if o != nil && !IsNil(o.RuleSet) {
		return true
	}

	return false
}

// SetRuleSet gets a reference to the given GameCenterMatchmakingQueueRelationshipsRuleSet and assigns it to the RuleSet field.
func (o *GameCenterMatchmakingQueueRelationships) SetRuleSet(v GameCenterMatchmakingQueueRelationshipsRuleSet) {
	o.RuleSet = &v
}

// GetExperimentRuleSet returns the ExperimentRuleSet field value if set, zero value otherwise.
func (o *GameCenterMatchmakingQueueRelationships) GetExperimentRuleSet() GameCenterMatchmakingQueueRelationshipsRuleSet {
	if o == nil || IsNil(o.ExperimentRuleSet) {
		var ret GameCenterMatchmakingQueueRelationshipsRuleSet
		return ret
	}
	return *o.ExperimentRuleSet
}

// GetExperimentRuleSetOk returns a tuple with the ExperimentRuleSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterMatchmakingQueueRelationships) GetExperimentRuleSetOk() (*GameCenterMatchmakingQueueRelationshipsRuleSet, bool) {
	if o == nil || IsNil(o.ExperimentRuleSet) {
		return nil, false
	}
	return o.ExperimentRuleSet, true
}

// HasExperimentRuleSet returns a boolean if a field has been set.
func (o *GameCenterMatchmakingQueueRelationships) HasExperimentRuleSet() bool {
	if o != nil && !IsNil(o.ExperimentRuleSet) {
		return true
	}

	return false
}

// SetExperimentRuleSet gets a reference to the given GameCenterMatchmakingQueueRelationshipsRuleSet and assigns it to the ExperimentRuleSet field.
func (o *GameCenterMatchmakingQueueRelationships) SetExperimentRuleSet(v GameCenterMatchmakingQueueRelationshipsRuleSet) {
	o.ExperimentRuleSet = &v
}

func (o GameCenterMatchmakingQueueRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterMatchmakingQueueRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleSet) {
		toSerialize["ruleSet"] = o.RuleSet
	}
	if !IsNil(o.ExperimentRuleSet) {
		toSerialize["experimentRuleSet"] = o.ExperimentRuleSet
	}
	return toSerialize, nil
}

type NullableGameCenterMatchmakingQueueRelationships struct {
	value *GameCenterMatchmakingQueueRelationships
	isSet bool
}

func (v NullableGameCenterMatchmakingQueueRelationships) Get() *GameCenterMatchmakingQueueRelationships {
	return v.value
}

func (v *NullableGameCenterMatchmakingQueueRelationships) Set(val *GameCenterMatchmakingQueueRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterMatchmakingQueueRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterMatchmakingQueueRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterMatchmakingQueueRelationships(val *GameCenterMatchmakingQueueRelationships) *NullableGameCenterMatchmakingQueueRelationships {
	return &NullableGameCenterMatchmakingQueueRelationships{value: val, isSet: true}
}

func (v NullableGameCenterMatchmakingQueueRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterMatchmakingQueueRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


