/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"time"
)

// checks if the AlternativeDistributionDomainAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlternativeDistributionDomainAttributes{}

// AlternativeDistributionDomainAttributes struct for AlternativeDistributionDomainAttributes
type AlternativeDistributionDomainAttributes struct {
	Domain *string `json:"domain,omitempty"`
	ReferenceName *string `json:"referenceName,omitempty"`
	CreatedDate *time.Time `json:"createdDate,omitempty"`
}

// NewAlternativeDistributionDomainAttributes instantiates a new AlternativeDistributionDomainAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlternativeDistributionDomainAttributes() *AlternativeDistributionDomainAttributes {
	this := AlternativeDistributionDomainAttributes{}
	return &this
}

// NewAlternativeDistributionDomainAttributesWithDefaults instantiates a new AlternativeDistributionDomainAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlternativeDistributionDomainAttributesWithDefaults() *AlternativeDistributionDomainAttributes {
	this := AlternativeDistributionDomainAttributes{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *AlternativeDistributionDomainAttributes) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlternativeDistributionDomainAttributes) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *AlternativeDistributionDomainAttributes) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *AlternativeDistributionDomainAttributes) SetDomain(v string) {
	o.Domain = &v
}

// GetReferenceName returns the ReferenceName field value if set, zero value otherwise.
func (o *AlternativeDistributionDomainAttributes) GetReferenceName() string {
	if o == nil || IsNil(o.ReferenceName) {
		var ret string
		return ret
	}
	return *o.ReferenceName
}

// GetReferenceNameOk returns a tuple with the ReferenceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlternativeDistributionDomainAttributes) GetReferenceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceName) {
		return nil, false
	}
	return o.ReferenceName, true
}

// HasReferenceName returns a boolean if a field has been set.
func (o *AlternativeDistributionDomainAttributes) HasReferenceName() bool {
	if o != nil && !IsNil(o.ReferenceName) {
		return true
	}

	return false
}

// SetReferenceName gets a reference to the given string and assigns it to the ReferenceName field.
func (o *AlternativeDistributionDomainAttributes) SetReferenceName(v string) {
	o.ReferenceName = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *AlternativeDistributionDomainAttributes) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlternativeDistributionDomainAttributes) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *AlternativeDistributionDomainAttributes) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *AlternativeDistributionDomainAttributes) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

func (o AlternativeDistributionDomainAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlternativeDistributionDomainAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.ReferenceName) {
		toSerialize["referenceName"] = o.ReferenceName
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	return toSerialize, nil
}

type NullableAlternativeDistributionDomainAttributes struct {
	value *AlternativeDistributionDomainAttributes
	isSet bool
}

func (v NullableAlternativeDistributionDomainAttributes) Get() *AlternativeDistributionDomainAttributes {
	return v.value
}

func (v *NullableAlternativeDistributionDomainAttributes) Set(val *AlternativeDistributionDomainAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAlternativeDistributionDomainAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAlternativeDistributionDomainAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlternativeDistributionDomainAttributes(val *AlternativeDistributionDomainAttributes) *NullableAlternativeDistributionDomainAttributes {
	return &NullableAlternativeDistributionDomainAttributes{value: val, isSet: true}
}

func (v NullableAlternativeDistributionDomainAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlternativeDistributionDomainAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


