/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the GameCenterAchievementLocalizationUpdateRequestDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterAchievementLocalizationUpdateRequestDataAttributes{}

// GameCenterAchievementLocalizationUpdateRequestDataAttributes struct for GameCenterAchievementLocalizationUpdateRequestDataAttributes
type GameCenterAchievementLocalizationUpdateRequestDataAttributes struct {
	Name *string `json:"name,omitempty"`
	BeforeEarnedDescription *string `json:"beforeEarnedDescription,omitempty"`
	AfterEarnedDescription *string `json:"afterEarnedDescription,omitempty"`
}

// NewGameCenterAchievementLocalizationUpdateRequestDataAttributes instantiates a new GameCenterAchievementLocalizationUpdateRequestDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterAchievementLocalizationUpdateRequestDataAttributes() *GameCenterAchievementLocalizationUpdateRequestDataAttributes {
	this := GameCenterAchievementLocalizationUpdateRequestDataAttributes{}
	return &this
}

// NewGameCenterAchievementLocalizationUpdateRequestDataAttributesWithDefaults instantiates a new GameCenterAchievementLocalizationUpdateRequestDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterAchievementLocalizationUpdateRequestDataAttributesWithDefaults() *GameCenterAchievementLocalizationUpdateRequestDataAttributes {
	this := GameCenterAchievementLocalizationUpdateRequestDataAttributes{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetBeforeEarnedDescription returns the BeforeEarnedDescription field value if set, zero value otherwise.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetBeforeEarnedDescription() string {
	if o == nil || IsNil(o.BeforeEarnedDescription) {
		var ret string
		return ret
	}
	return *o.BeforeEarnedDescription
}

// GetBeforeEarnedDescriptionOk returns a tuple with the BeforeEarnedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetBeforeEarnedDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.BeforeEarnedDescription) {
		return nil, false
	}
	return o.BeforeEarnedDescription, true
}

// HasBeforeEarnedDescription returns a boolean if a field has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) HasBeforeEarnedDescription() bool {
	if o != nil && !IsNil(o.BeforeEarnedDescription) {
		return true
	}

	return false
}

// SetBeforeEarnedDescription gets a reference to the given string and assigns it to the BeforeEarnedDescription field.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) SetBeforeEarnedDescription(v string) {
	o.BeforeEarnedDescription = &v
}

// GetAfterEarnedDescription returns the AfterEarnedDescription field value if set, zero value otherwise.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetAfterEarnedDescription() string {
	if o == nil || IsNil(o.AfterEarnedDescription) {
		var ret string
		return ret
	}
	return *o.AfterEarnedDescription
}

// GetAfterEarnedDescriptionOk returns a tuple with the AfterEarnedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) GetAfterEarnedDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.AfterEarnedDescription) {
		return nil, false
	}
	return o.AfterEarnedDescription, true
}

// HasAfterEarnedDescription returns a boolean if a field has been set.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) HasAfterEarnedDescription() bool {
	if o != nil && !IsNil(o.AfterEarnedDescription) {
		return true
	}

	return false
}

// SetAfterEarnedDescription gets a reference to the given string and assigns it to the AfterEarnedDescription field.
func (o *GameCenterAchievementLocalizationUpdateRequestDataAttributes) SetAfterEarnedDescription(v string) {
	o.AfterEarnedDescription = &v
}

func (o GameCenterAchievementLocalizationUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterAchievementLocalizationUpdateRequestDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BeforeEarnedDescription) {
		toSerialize["beforeEarnedDescription"] = o.BeforeEarnedDescription
	}
	if !IsNil(o.AfterEarnedDescription) {
		toSerialize["afterEarnedDescription"] = o.AfterEarnedDescription
	}
	return toSerialize, nil
}

type NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes struct {
	value *GameCenterAchievementLocalizationUpdateRequestDataAttributes
	isSet bool
}

func (v NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) Get() *GameCenterAchievementLocalizationUpdateRequestDataAttributes {
	return v.value
}

func (v *NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) Set(val *GameCenterAchievementLocalizationUpdateRequestDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterAchievementLocalizationUpdateRequestDataAttributes(val *GameCenterAchievementLocalizationUpdateRequestDataAttributes) *NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes {
	return &NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes{value: val, isSet: true}
}

func (v NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterAchievementLocalizationUpdateRequestDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


