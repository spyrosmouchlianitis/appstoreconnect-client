/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AppStoreVersionExperimentsV2Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionExperimentsV2Response{}

// AppStoreVersionExperimentsV2Response struct for AppStoreVersionExperimentsV2Response
type AppStoreVersionExperimentsV2Response struct {
	Data []AppStoreVersionExperimentV2 `json:"data"`
	Included []AppStoreVersionExperimentsV2ResponseIncludedInner `json:"included,omitempty"`
	Links PagedDocumentLinks `json:"links"`
	Meta *PagingInformation `json:"meta,omitempty"`
}

type _AppStoreVersionExperimentsV2Response AppStoreVersionExperimentsV2Response

// NewAppStoreVersionExperimentsV2Response instantiates a new AppStoreVersionExperimentsV2Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionExperimentsV2Response(data []AppStoreVersionExperimentV2, links PagedDocumentLinks) *AppStoreVersionExperimentsV2Response {
	this := AppStoreVersionExperimentsV2Response{}
	this.Data = data
	this.Links = links
	return &this
}

// NewAppStoreVersionExperimentsV2ResponseWithDefaults instantiates a new AppStoreVersionExperimentsV2Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionExperimentsV2ResponseWithDefaults() *AppStoreVersionExperimentsV2Response {
	this := AppStoreVersionExperimentsV2Response{}
	return &this
}

// GetData returns the Data field value
func (o *AppStoreVersionExperimentsV2Response) GetData() []AppStoreVersionExperimentV2 {
	if o == nil {
		var ret []AppStoreVersionExperimentV2
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentsV2Response) GetDataOk() ([]AppStoreVersionExperimentV2, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AppStoreVersionExperimentsV2Response) SetData(v []AppStoreVersionExperimentV2) {
	o.Data = v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentsV2Response) GetIncluded() []AppStoreVersionExperimentsV2ResponseIncludedInner {
	if o == nil || IsNil(o.Included) {
		var ret []AppStoreVersionExperimentsV2ResponseIncludedInner
		return ret
	}
	return o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentsV2Response) GetIncludedOk() ([]AppStoreVersionExperimentsV2ResponseIncludedInner, bool) {
	if o == nil || IsNil(o.Included) {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentsV2Response) HasIncluded() bool {
	if o != nil && !IsNil(o.Included) {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []AppStoreVersionExperimentsV2ResponseIncludedInner and assigns it to the Included field.
func (o *AppStoreVersionExperimentsV2Response) SetIncluded(v []AppStoreVersionExperimentsV2ResponseIncludedInner) {
	o.Included = v
}

// GetLinks returns the Links field value
func (o *AppStoreVersionExperimentsV2Response) GetLinks() PagedDocumentLinks {
	if o == nil {
		var ret PagedDocumentLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentsV2Response) GetLinksOk() (*PagedDocumentLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *AppStoreVersionExperimentsV2Response) SetLinks(v PagedDocumentLinks) {
	o.Links = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AppStoreVersionExperimentsV2Response) GetMeta() PagingInformation {
	if o == nil || IsNil(o.Meta) {
		var ret PagingInformation
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionExperimentsV2Response) GetMetaOk() (*PagingInformation, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AppStoreVersionExperimentsV2Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given PagingInformation and assigns it to the Meta field.
func (o *AppStoreVersionExperimentsV2Response) SetMeta(v PagingInformation) {
	o.Meta = &v
}

func (o AppStoreVersionExperimentsV2Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionExperimentsV2Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Included) {
		toSerialize["included"] = o.Included
	}
	toSerialize["links"] = o.Links
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

func (o *AppStoreVersionExperimentsV2Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAppStoreVersionExperimentsV2Response := _AppStoreVersionExperimentsV2Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAppStoreVersionExperimentsV2Response)

	if err != nil {
		return err
	}

	*o = AppStoreVersionExperimentsV2Response(varAppStoreVersionExperimentsV2Response)

	return err
}

type NullableAppStoreVersionExperimentsV2Response struct {
	value *AppStoreVersionExperimentsV2Response
	isSet bool
}

func (v NullableAppStoreVersionExperimentsV2Response) Get() *AppStoreVersionExperimentsV2Response {
	return v.value
}

func (v *NullableAppStoreVersionExperimentsV2Response) Set(val *AppStoreVersionExperimentsV2Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionExperimentsV2Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionExperimentsV2Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionExperimentsV2Response(val *AppStoreVersionExperimentsV2Response) *NullableAppStoreVersionExperimentsV2Response {
	return &NullableAppStoreVersionExperimentsV2Response{value: val, isSet: true}
}

func (v NullableAppStoreVersionExperimentsV2Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionExperimentsV2Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


