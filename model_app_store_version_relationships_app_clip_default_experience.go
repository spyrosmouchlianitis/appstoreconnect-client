/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the AppStoreVersionRelationshipsAppClipDefaultExperience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStoreVersionRelationshipsAppClipDefaultExperience{}

// AppStoreVersionRelationshipsAppClipDefaultExperience struct for AppStoreVersionRelationshipsAppClipDefaultExperience
type AppStoreVersionRelationshipsAppClipDefaultExperience struct {
	Links *RelationshipLinks `json:"links,omitempty"`
	Data *AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData `json:"data,omitempty"`
}

// NewAppStoreVersionRelationshipsAppClipDefaultExperience instantiates a new AppStoreVersionRelationshipsAppClipDefaultExperience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStoreVersionRelationshipsAppClipDefaultExperience() *AppStoreVersionRelationshipsAppClipDefaultExperience {
	this := AppStoreVersionRelationshipsAppClipDefaultExperience{}
	return &this
}

// NewAppStoreVersionRelationshipsAppClipDefaultExperienceWithDefaults instantiates a new AppStoreVersionRelationshipsAppClipDefaultExperience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStoreVersionRelationshipsAppClipDefaultExperienceWithDefaults() *AppStoreVersionRelationshipsAppClipDefaultExperience {
	this := AppStoreVersionRelationshipsAppClipDefaultExperience{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) GetLinks() RelationshipLinks {
	if o == nil || IsNil(o.Links) {
		var ret RelationshipLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) GetLinksOk() (*RelationshipLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given RelationshipLinks and assigns it to the Links field.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) SetLinks(v RelationshipLinks) {
	o.Links = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) GetData() AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData {
	if o == nil || IsNil(o.Data) {
		var ret AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) GetDataOk() (*AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData and assigns it to the Data field.
func (o *AppStoreVersionRelationshipsAppClipDefaultExperience) SetData(v AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperienceData) {
	o.Data = &v
}

func (o AppStoreVersionRelationshipsAppClipDefaultExperience) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStoreVersionRelationshipsAppClipDefaultExperience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableAppStoreVersionRelationshipsAppClipDefaultExperience struct {
	value *AppStoreVersionRelationshipsAppClipDefaultExperience
	isSet bool
}

func (v NullableAppStoreVersionRelationshipsAppClipDefaultExperience) Get() *AppStoreVersionRelationshipsAppClipDefaultExperience {
	return v.value
}

func (v *NullableAppStoreVersionRelationshipsAppClipDefaultExperience) Set(val *AppStoreVersionRelationshipsAppClipDefaultExperience) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStoreVersionRelationshipsAppClipDefaultExperience) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStoreVersionRelationshipsAppClipDefaultExperience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStoreVersionRelationshipsAppClipDefaultExperience(val *AppStoreVersionRelationshipsAppClipDefaultExperience) *NullableAppStoreVersionRelationshipsAppClipDefaultExperience {
	return &NullableAppStoreVersionRelationshipsAppClipDefaultExperience{value: val, isSet: true}
}

func (v NullableAppStoreVersionRelationshipsAppClipDefaultExperience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStoreVersionRelationshipsAppClipDefaultExperience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


