/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the ErrorLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorLinks{}

// ErrorLinks struct for ErrorLinks
type ErrorLinks struct {
	About *string `json:"about,omitempty"`
	Associated *ErrorLinksAssociated `json:"associated,omitempty"`
}

// NewErrorLinks instantiates a new ErrorLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorLinks() *ErrorLinks {
	this := ErrorLinks{}
	return &this
}

// NewErrorLinksWithDefaults instantiates a new ErrorLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorLinksWithDefaults() *ErrorLinks {
	this := ErrorLinks{}
	return &this
}

// GetAbout returns the About field value if set, zero value otherwise.
func (o *ErrorLinks) GetAbout() string {
	if o == nil || IsNil(o.About) {
		var ret string
		return ret
	}
	return *o.About
}

// GetAboutOk returns a tuple with the About field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLinks) GetAboutOk() (*string, bool) {
	if o == nil || IsNil(o.About) {
		return nil, false
	}
	return o.About, true
}

// HasAbout returns a boolean if a field has been set.
func (o *ErrorLinks) HasAbout() bool {
	if o != nil && !IsNil(o.About) {
		return true
	}

	return false
}

// SetAbout gets a reference to the given string and assigns it to the About field.
func (o *ErrorLinks) SetAbout(v string) {
	o.About = &v
}

// GetAssociated returns the Associated field value if set, zero value otherwise.
func (o *ErrorLinks) GetAssociated() ErrorLinksAssociated {
	if o == nil || IsNil(o.Associated) {
		var ret ErrorLinksAssociated
		return ret
	}
	return *o.Associated
}

// GetAssociatedOk returns a tuple with the Associated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLinks) GetAssociatedOk() (*ErrorLinksAssociated, bool) {
	if o == nil || IsNil(o.Associated) {
		return nil, false
	}
	return o.Associated, true
}

// HasAssociated returns a boolean if a field has been set.
func (o *ErrorLinks) HasAssociated() bool {
	if o != nil && !IsNil(o.Associated) {
		return true
	}

	return false
}

// SetAssociated gets a reference to the given ErrorLinksAssociated and assigns it to the Associated field.
func (o *ErrorLinks) SetAssociated(v ErrorLinksAssociated) {
	o.Associated = &v
}

func (o ErrorLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.About) {
		toSerialize["about"] = o.About
	}
	if !IsNil(o.Associated) {
		toSerialize["associated"] = o.Associated
	}
	return toSerialize, nil
}

type NullableErrorLinks struct {
	value *ErrorLinks
	isSet bool
}

func (v NullableErrorLinks) Get() *ErrorLinks {
	return v.value
}

func (v *NullableErrorLinks) Set(val *ErrorLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorLinks(val *ErrorLinks) *NullableErrorLinks {
	return &NullableErrorLinks{value: val, isSet: true}
}

func (v NullableErrorLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


