/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnect-client

import (
	"encoding/json"
)

// checks if the GameCenterLeaderboardSetRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterLeaderboardSetRelationships{}

// GameCenterLeaderboardSetRelationships struct for GameCenterLeaderboardSetRelationships
type GameCenterLeaderboardSetRelationships struct {
	GameCenterDetail *GameCenterAchievementReleaseRelationshipsGameCenterDetail `json:"gameCenterDetail,omitempty"`
	GameCenterGroup *GameCenterAchievementRelationshipsGameCenterGroup `json:"gameCenterGroup,omitempty"`
	GroupLeaderboardSet *GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet `json:"groupLeaderboardSet,omitempty"`
	Localizations *GameCenterLeaderboardSetRelationshipsLocalizations `json:"localizations,omitempty"`
	GameCenterLeaderboards *GameCenterDetailRelationshipsGameCenterLeaderboards `json:"gameCenterLeaderboards,omitempty"`
	Releases *GameCenterDetailRelationshipsLeaderboardSetReleases `json:"releases,omitempty"`
}

// NewGameCenterLeaderboardSetRelationships instantiates a new GameCenterLeaderboardSetRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterLeaderboardSetRelationships() *GameCenterLeaderboardSetRelationships {
	this := GameCenterLeaderboardSetRelationships{}
	return &this
}

// NewGameCenterLeaderboardSetRelationshipsWithDefaults instantiates a new GameCenterLeaderboardSetRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterLeaderboardSetRelationshipsWithDefaults() *GameCenterLeaderboardSetRelationships {
	this := GameCenterLeaderboardSetRelationships{}
	return &this
}

// GetGameCenterDetail returns the GameCenterDetail field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterDetail() GameCenterAchievementReleaseRelationshipsGameCenterDetail {
	if o == nil || IsNil(o.GameCenterDetail) {
		var ret GameCenterAchievementReleaseRelationshipsGameCenterDetail
		return ret
	}
	return *o.GameCenterDetail
}

// GetGameCenterDetailOk returns a tuple with the GameCenterDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterDetailOk() (*GameCenterAchievementReleaseRelationshipsGameCenterDetail, bool) {
	if o == nil || IsNil(o.GameCenterDetail) {
		return nil, false
	}
	return o.GameCenterDetail, true
}

// HasGameCenterDetail returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasGameCenterDetail() bool {
	if o != nil && !IsNil(o.GameCenterDetail) {
		return true
	}

	return false
}

// SetGameCenterDetail gets a reference to the given GameCenterAchievementReleaseRelationshipsGameCenterDetail and assigns it to the GameCenterDetail field.
func (o *GameCenterLeaderboardSetRelationships) SetGameCenterDetail(v GameCenterAchievementReleaseRelationshipsGameCenterDetail) {
	o.GameCenterDetail = &v
}

// GetGameCenterGroup returns the GameCenterGroup field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterGroup() GameCenterAchievementRelationshipsGameCenterGroup {
	if o == nil || IsNil(o.GameCenterGroup) {
		var ret GameCenterAchievementRelationshipsGameCenterGroup
		return ret
	}
	return *o.GameCenterGroup
}

// GetGameCenterGroupOk returns a tuple with the GameCenterGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterGroupOk() (*GameCenterAchievementRelationshipsGameCenterGroup, bool) {
	if o == nil || IsNil(o.GameCenterGroup) {
		return nil, false
	}
	return o.GameCenterGroup, true
}

// HasGameCenterGroup returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasGameCenterGroup() bool {
	if o != nil && !IsNil(o.GameCenterGroup) {
		return true
	}

	return false
}

// SetGameCenterGroup gets a reference to the given GameCenterAchievementRelationshipsGameCenterGroup and assigns it to the GameCenterGroup field.
func (o *GameCenterLeaderboardSetRelationships) SetGameCenterGroup(v GameCenterAchievementRelationshipsGameCenterGroup) {
	o.GameCenterGroup = &v
}

// GetGroupLeaderboardSet returns the GroupLeaderboardSet field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetGroupLeaderboardSet() GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet {
	if o == nil || IsNil(o.GroupLeaderboardSet) {
		var ret GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet
		return ret
	}
	return *o.GroupLeaderboardSet
}

// GetGroupLeaderboardSetOk returns a tuple with the GroupLeaderboardSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetGroupLeaderboardSetOk() (*GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet, bool) {
	if o == nil || IsNil(o.GroupLeaderboardSet) {
		return nil, false
	}
	return o.GroupLeaderboardSet, true
}

// HasGroupLeaderboardSet returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasGroupLeaderboardSet() bool {
	if o != nil && !IsNil(o.GroupLeaderboardSet) {
		return true
	}

	return false
}

// SetGroupLeaderboardSet gets a reference to the given GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet and assigns it to the GroupLeaderboardSet field.
func (o *GameCenterLeaderboardSetRelationships) SetGroupLeaderboardSet(v GameCenterLeaderboardSetMemberLocalizationRelationshipsGameCenterLeaderboardSet) {
	o.GroupLeaderboardSet = &v
}

// GetLocalizations returns the Localizations field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetLocalizations() GameCenterLeaderboardSetRelationshipsLocalizations {
	if o == nil || IsNil(o.Localizations) {
		var ret GameCenterLeaderboardSetRelationshipsLocalizations
		return ret
	}
	return *o.Localizations
}

// GetLocalizationsOk returns a tuple with the Localizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetLocalizationsOk() (*GameCenterLeaderboardSetRelationshipsLocalizations, bool) {
	if o == nil || IsNil(o.Localizations) {
		return nil, false
	}
	return o.Localizations, true
}

// HasLocalizations returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasLocalizations() bool {
	if o != nil && !IsNil(o.Localizations) {
		return true
	}

	return false
}

// SetLocalizations gets a reference to the given GameCenterLeaderboardSetRelationshipsLocalizations and assigns it to the Localizations field.
func (o *GameCenterLeaderboardSetRelationships) SetLocalizations(v GameCenterLeaderboardSetRelationshipsLocalizations) {
	o.Localizations = &v
}

// GetGameCenterLeaderboards returns the GameCenterLeaderboards field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterLeaderboards() GameCenterDetailRelationshipsGameCenterLeaderboards {
	if o == nil || IsNil(o.GameCenterLeaderboards) {
		var ret GameCenterDetailRelationshipsGameCenterLeaderboards
		return ret
	}
	return *o.GameCenterLeaderboards
}

// GetGameCenterLeaderboardsOk returns a tuple with the GameCenterLeaderboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetGameCenterLeaderboardsOk() (*GameCenterDetailRelationshipsGameCenterLeaderboards, bool) {
	if o == nil || IsNil(o.GameCenterLeaderboards) {
		return nil, false
	}
	return o.GameCenterLeaderboards, true
}

// HasGameCenterLeaderboards returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasGameCenterLeaderboards() bool {
	if o != nil && !IsNil(o.GameCenterLeaderboards) {
		return true
	}

	return false
}

// SetGameCenterLeaderboards gets a reference to the given GameCenterDetailRelationshipsGameCenterLeaderboards and assigns it to the GameCenterLeaderboards field.
func (o *GameCenterLeaderboardSetRelationships) SetGameCenterLeaderboards(v GameCenterDetailRelationshipsGameCenterLeaderboards) {
	o.GameCenterLeaderboards = &v
}

// GetReleases returns the Releases field value if set, zero value otherwise.
func (o *GameCenterLeaderboardSetRelationships) GetReleases() GameCenterDetailRelationshipsLeaderboardSetReleases {
	if o == nil || IsNil(o.Releases) {
		var ret GameCenterDetailRelationshipsLeaderboardSetReleases
		return ret
	}
	return *o.Releases
}

// GetReleasesOk returns a tuple with the Releases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterLeaderboardSetRelationships) GetReleasesOk() (*GameCenterDetailRelationshipsLeaderboardSetReleases, bool) {
	if o == nil || IsNil(o.Releases) {
		return nil, false
	}
	return o.Releases, true
}

// HasReleases returns a boolean if a field has been set.
func (o *GameCenterLeaderboardSetRelationships) HasReleases() bool {
	if o != nil && !IsNil(o.Releases) {
		return true
	}

	return false
}

// SetReleases gets a reference to the given GameCenterDetailRelationshipsLeaderboardSetReleases and assigns it to the Releases field.
func (o *GameCenterLeaderboardSetRelationships) SetReleases(v GameCenterDetailRelationshipsLeaderboardSetReleases) {
	o.Releases = &v
}

func (o GameCenterLeaderboardSetRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterLeaderboardSetRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GameCenterDetail) {
		toSerialize["gameCenterDetail"] = o.GameCenterDetail
	}
	if !IsNil(o.GameCenterGroup) {
		toSerialize["gameCenterGroup"] = o.GameCenterGroup
	}
	if !IsNil(o.GroupLeaderboardSet) {
		toSerialize["groupLeaderboardSet"] = o.GroupLeaderboardSet
	}
	if !IsNil(o.Localizations) {
		toSerialize["localizations"] = o.Localizations
	}
	if !IsNil(o.GameCenterLeaderboards) {
		toSerialize["gameCenterLeaderboards"] = o.GameCenterLeaderboards
	}
	if !IsNil(o.Releases) {
		toSerialize["releases"] = o.Releases
	}
	return toSerialize, nil
}

type NullableGameCenterLeaderboardSetRelationships struct {
	value *GameCenterLeaderboardSetRelationships
	isSet bool
}

func (v NullableGameCenterLeaderboardSetRelationships) Get() *GameCenterLeaderboardSetRelationships {
	return v.value
}

func (v *NullableGameCenterLeaderboardSetRelationships) Set(val *GameCenterLeaderboardSetRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterLeaderboardSetRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterLeaderboardSetRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterLeaderboardSetRelationships(val *GameCenterLeaderboardSetRelationships) *NullableGameCenterLeaderboardSetRelationships {
	return &NullableGameCenterLeaderboardSetRelationships{value: val, isSet: true}
}

func (v NullableGameCenterLeaderboardSetRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterLeaderboardSetRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


