/*
App Store Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3.6.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package appstoreconnectclient

import (
	"encoding/json"
)

// checks if the GameCenterGroupRelationships type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameCenterGroupRelationships{}

// GameCenterGroupRelationships struct for GameCenterGroupRelationships
type GameCenterGroupRelationships struct {
	GameCenterDetails *GameCenterGroupRelationshipsGameCenterDetails `json:"gameCenterDetails,omitempty"`
	GameCenterLeaderboards *GameCenterDetailRelationshipsGameCenterLeaderboards `json:"gameCenterLeaderboards,omitempty"`
	GameCenterLeaderboardSets *GameCenterDetailRelationshipsGameCenterLeaderboardSets `json:"gameCenterLeaderboardSets,omitempty"`
	GameCenterAchievements *GameCenterDetailRelationshipsGameCenterAchievements `json:"gameCenterAchievements,omitempty"`
}

// NewGameCenterGroupRelationships instantiates a new GameCenterGroupRelationships object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameCenterGroupRelationships() *GameCenterGroupRelationships {
	this := GameCenterGroupRelationships{}
	return &this
}

// NewGameCenterGroupRelationshipsWithDefaults instantiates a new GameCenterGroupRelationships object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameCenterGroupRelationshipsWithDefaults() *GameCenterGroupRelationships {
	this := GameCenterGroupRelationships{}
	return &this
}

// GetGameCenterDetails returns the GameCenterDetails field value if set, zero value otherwise.
func (o *GameCenterGroupRelationships) GetGameCenterDetails() GameCenterGroupRelationshipsGameCenterDetails {
	if o == nil || IsNil(o.GameCenterDetails) {
		var ret GameCenterGroupRelationshipsGameCenterDetails
		return ret
	}
	return *o.GameCenterDetails
}

// GetGameCenterDetailsOk returns a tuple with the GameCenterDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterGroupRelationships) GetGameCenterDetailsOk() (*GameCenterGroupRelationshipsGameCenterDetails, bool) {
	if o == nil || IsNil(o.GameCenterDetails) {
		return nil, false
	}
	return o.GameCenterDetails, true
}

// HasGameCenterDetails returns a boolean if a field has been set.
func (o *GameCenterGroupRelationships) HasGameCenterDetails() bool {
	if o != nil && !IsNil(o.GameCenterDetails) {
		return true
	}

	return false
}

// SetGameCenterDetails gets a reference to the given GameCenterGroupRelationshipsGameCenterDetails and assigns it to the GameCenterDetails field.
func (o *GameCenterGroupRelationships) SetGameCenterDetails(v GameCenterGroupRelationshipsGameCenterDetails) {
	o.GameCenterDetails = &v
}

// GetGameCenterLeaderboards returns the GameCenterLeaderboards field value if set, zero value otherwise.
func (o *GameCenterGroupRelationships) GetGameCenterLeaderboards() GameCenterDetailRelationshipsGameCenterLeaderboards {
	if o == nil || IsNil(o.GameCenterLeaderboards) {
		var ret GameCenterDetailRelationshipsGameCenterLeaderboards
		return ret
	}
	return *o.GameCenterLeaderboards
}

// GetGameCenterLeaderboardsOk returns a tuple with the GameCenterLeaderboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterGroupRelationships) GetGameCenterLeaderboardsOk() (*GameCenterDetailRelationshipsGameCenterLeaderboards, bool) {
	if o == nil || IsNil(o.GameCenterLeaderboards) {
		return nil, false
	}
	return o.GameCenterLeaderboards, true
}

// HasGameCenterLeaderboards returns a boolean if a field has been set.
func (o *GameCenterGroupRelationships) HasGameCenterLeaderboards() bool {
	if o != nil && !IsNil(o.GameCenterLeaderboards) {
		return true
	}

	return false
}

// SetGameCenterLeaderboards gets a reference to the given GameCenterDetailRelationshipsGameCenterLeaderboards and assigns it to the GameCenterLeaderboards field.
func (o *GameCenterGroupRelationships) SetGameCenterLeaderboards(v GameCenterDetailRelationshipsGameCenterLeaderboards) {
	o.GameCenterLeaderboards = &v
}

// GetGameCenterLeaderboardSets returns the GameCenterLeaderboardSets field value if set, zero value otherwise.
func (o *GameCenterGroupRelationships) GetGameCenterLeaderboardSets() GameCenterDetailRelationshipsGameCenterLeaderboardSets {
	if o == nil || IsNil(o.GameCenterLeaderboardSets) {
		var ret GameCenterDetailRelationshipsGameCenterLeaderboardSets
		return ret
	}
	return *o.GameCenterLeaderboardSets
}

// GetGameCenterLeaderboardSetsOk returns a tuple with the GameCenterLeaderboardSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterGroupRelationships) GetGameCenterLeaderboardSetsOk() (*GameCenterDetailRelationshipsGameCenterLeaderboardSets, bool) {
	if o == nil || IsNil(o.GameCenterLeaderboardSets) {
		return nil, false
	}
	return o.GameCenterLeaderboardSets, true
}

// HasGameCenterLeaderboardSets returns a boolean if a field has been set.
func (o *GameCenterGroupRelationships) HasGameCenterLeaderboardSets() bool {
	if o != nil && !IsNil(o.GameCenterLeaderboardSets) {
		return true
	}

	return false
}

// SetGameCenterLeaderboardSets gets a reference to the given GameCenterDetailRelationshipsGameCenterLeaderboardSets and assigns it to the GameCenterLeaderboardSets field.
func (o *GameCenterGroupRelationships) SetGameCenterLeaderboardSets(v GameCenterDetailRelationshipsGameCenterLeaderboardSets) {
	o.GameCenterLeaderboardSets = &v
}

// GetGameCenterAchievements returns the GameCenterAchievements field value if set, zero value otherwise.
func (o *GameCenterGroupRelationships) GetGameCenterAchievements() GameCenterDetailRelationshipsGameCenterAchievements {
	if o == nil || IsNil(o.GameCenterAchievements) {
		var ret GameCenterDetailRelationshipsGameCenterAchievements
		return ret
	}
	return *o.GameCenterAchievements
}

// GetGameCenterAchievementsOk returns a tuple with the GameCenterAchievements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameCenterGroupRelationships) GetGameCenterAchievementsOk() (*GameCenterDetailRelationshipsGameCenterAchievements, bool) {
	if o == nil || IsNil(o.GameCenterAchievements) {
		return nil, false
	}
	return o.GameCenterAchievements, true
}

// HasGameCenterAchievements returns a boolean if a field has been set.
func (o *GameCenterGroupRelationships) HasGameCenterAchievements() bool {
	if o != nil && !IsNil(o.GameCenterAchievements) {
		return true
	}

	return false
}

// SetGameCenterAchievements gets a reference to the given GameCenterDetailRelationshipsGameCenterAchievements and assigns it to the GameCenterAchievements field.
func (o *GameCenterGroupRelationships) SetGameCenterAchievements(v GameCenterDetailRelationshipsGameCenterAchievements) {
	o.GameCenterAchievements = &v
}

func (o GameCenterGroupRelationships) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameCenterGroupRelationships) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GameCenterDetails) {
		toSerialize["gameCenterDetails"] = o.GameCenterDetails
	}
	if !IsNil(o.GameCenterLeaderboards) {
		toSerialize["gameCenterLeaderboards"] = o.GameCenterLeaderboards
	}
	if !IsNil(o.GameCenterLeaderboardSets) {
		toSerialize["gameCenterLeaderboardSets"] = o.GameCenterLeaderboardSets
	}
	if !IsNil(o.GameCenterAchievements) {
		toSerialize["gameCenterAchievements"] = o.GameCenterAchievements
	}
	return toSerialize, nil
}

type NullableGameCenterGroupRelationships struct {
	value *GameCenterGroupRelationships
	isSet bool
}

func (v NullableGameCenterGroupRelationships) Get() *GameCenterGroupRelationships {
	return v.value
}

func (v *NullableGameCenterGroupRelationships) Set(val *GameCenterGroupRelationships) {
	v.value = val
	v.isSet = true
}

func (v NullableGameCenterGroupRelationships) IsSet() bool {
	return v.isSet
}

func (v *NullableGameCenterGroupRelationships) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameCenterGroupRelationships(val *GameCenterGroupRelationships) *NullableGameCenterGroupRelationships {
	return &NullableGameCenterGroupRelationships{value: val, isSet: true}
}

func (v NullableGameCenterGroupRelationships) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameCenterGroupRelationships) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


